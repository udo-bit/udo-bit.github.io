import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as a,d as e}from"./app-B-48fc5n.js";const i={},p=e(`<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>\`\`\`python</span></span>
<span class="line"><span>from datetime import datetime, timedelta</span></span>
<span class="line"><span>from fastapi import FastAPI, Depends, HTTPException</span></span>
<span class="line"><span>from passlib.context import CryptContext</span></span>
<span class="line"><span>from typing import Annotated</span></span>
<span class="line"><span>import jwt</span></span>
<span class="line"><span>from fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm</span></span>
<span class="line"><span>from pydantic import BaseModel</span></span>
<span class="line"><span></span></span>
<span class="line"><span># secret key</span></span>
<span class="line"><span>SECRET_KEY = &quot;bd5f13d1cf899a9c701f62592c207642e81eac9a3b172359c2feef55932b6385&quot;</span></span>
<span class="line"><span># 定义加密算法</span></span>
<span class="line"><span>ALGORITHM = &quot;HS256&quot;</span></span>
<span class="line"><span># 定义过期时间</span></span>
<span class="line"><span>ACCESS_TOKEN_EXPIRE_MINUTES = 30</span></span>
<span class="line"><span>pwb_context = CryptContext(schemes=[&quot;bcrypt&quot;], deprecated=&quot;auto&quot;)</span></span>
<span class="line"><span>oauth2_scheme = OAuth2PasswordBearer(tokenUrl=&quot;token&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>app = FastAPI()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fake_users_db = {</span></span>
<span class="line"><span>    &quot;johndoe&quot;: {</span></span>
<span class="line"><span>        &quot;username&quot;: &quot;johndoe&quot;,</span></span>
<span class="line"><span>        &quot;full_name&quot;: &quot;John Doe&quot;,</span></span>
<span class="line"><span>        &quot;email&quot;: &quot;johndoe@example.com&quot;,</span></span>
<span class="line"><span>        &quot;hashed_password&quot;: &quot;$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW&quot;,</span></span>
<span class="line"><span>        &quot;disabled&quot;: False,</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>class User(BaseModel):</span></span>
<span class="line"><span>    username: str</span></span>
<span class="line"><span>    email: str</span></span>
<span class="line"><span>    full_name: str</span></span>
<span class="line"><span>    disabled: bool = None</span></span>
<span class="line"><span></span></span>
<span class="line"><span># token模型</span></span>
<span class="line"><span>class Token(BaseModel):</span></span>
<span class="line"><span>    access_token: str</span></span>
<span class="line"><span>    token_type: str</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span># 哈希加密</span></span>
<span class="line"><span>def get_password_hash(password):</span></span>
<span class="line"><span>    return pwb_context.hash(password)</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span># 验证密码</span></span>
<span class="line"><span>def verify_password(plain_password, hashed_password):</span></span>
<span class="line"><span>    return pwb_context.verify(plain_password, hashed_password)</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 签发token</span></span>
<span class="line"><span>def create_access_token(data: dict, expires_delta: int):</span></span>
<span class="line"><span>    to_encode = data.copy()</span></span>
<span class="line"><span>    expire = datetime.utcnow() + timedelta(minutes=expires_delta)</span></span>
<span class="line"><span>    to_encode.update({&quot;exp&quot;: expire})</span></span>
<span class="line"><span>    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)</span></span>
<span class="line"><span>    return encoded_jwt</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 获取当前用户</span></span>
<span class="line"><span>def get_current_user(token: str = Depends(oauth2_scheme)):</span></span>
<span class="line"><span>    credentials_exception = HTTPException(</span></span>
<span class="line"><span>        status_code=401,</span></span>
<span class="line"><span>        detail=&quot;Could not validate credentials&quot;,</span></span>
<span class="line"><span>        headers={&quot;WWW-Authenticate&quot;: &quot;Bearer&quot;},</span></span>
<span class="line"><span>    )</span></span>
<span class="line"><span>    try:</span></span>
<span class="line"><span>        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])</span></span>
<span class="line"><span>        username: str = payload.get(&quot;sub&quot;)</span></span>
<span class="line"><span>        if username is None:</span></span>
<span class="line"><span>            raise credentials_exception</span></span>
<span class="line"><span>    except jwt.PyJWTError:</span></span>
<span class="line"><span>        raise credentials_exception</span></span>
<span class="line"><span>    user = fake_users_db.get(username)</span></span>
<span class="line"><span>    if user is None:</span></span>
<span class="line"><span>        raise credentials_exception</span></span>
<span class="line"><span>    return user</span></span>
<span class="line"><span></span></span>
<span class="line"><span># token url</span></span>
<span class="line"><span>@app.post(&#39;/token&#39;, description=&#39;获取token&#39;)</span></span>
<span class="line"><span>def login_for_access_token(form_data: Annotated[OAuth2PasswordRequestForm, Depends()]):</span></span>
<span class="line"><span>    user = fake_users_db.get(form_data.username)</span></span>
<span class="line"><span>    if not user:</span></span>
<span class="line"><span>        raise HTTPException(status_code=400, detail=&quot;Incorrect username or password&quot;)</span></span>
<span class="line"><span>    if not verify_password(form_data.password, user[&#39;hashed_password&#39;]):</span></span>
<span class="line"><span>        raise HTTPException(status_code=400, detail=&quot;Incorrect username or password&quot;)</span></span>
<span class="line"><span>    access_token_expires = ACCESS_TOKEN_EXPIRE_MINUTES</span></span>
<span class="line"><span>    access_token = create_access_token(data={&quot;sub&quot;: user[&quot;username&quot;]}, expires_delta=access_token_expires)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    return {&quot;access_token&quot;: access_token, &quot;token_type&quot;: &quot;bearer&quot;}</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 需要鉴权的业务</span></span>
<span class="line"><span>@app.get(&#39;/items/&#39;, dependencies=[Depends(get_current_user)])</span></span>
<span class="line"><span>def get_item():</span></span>
<span class="line"><span>    return &quot;hello,world&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),l=[p];function d(c,r){return a(),n("div",null,l)}const v=s(i,[["render",d],["__file","用户鉴权.html.vue"]]),u=JSON.parse(`{"path":"/demo/back-ends/python/fastapi/note/%E7%94%A8%E6%88%B7%E9%89%B4%E6%9D%83.html","title":"用户鉴权","lang":"en-US","frontmatter":{"title":"用户鉴权","icon":"code","order":1,"head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/demo/back-ends/python/fastapi/note/%E7%94%A8%E6%88%B7%E9%89%B4%E6%9D%83.html"}],["meta",{"property":"og:site_name","content":"Utopia"}],["meta",{"property":"og:title","content":"用户鉴权"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-08-20T09:48:42.000Z"}],["meta",{"property":"article:author","content":"GXL"}],["meta",{"property":"article:modified_time","content":"2024-08-20T09:48:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"用户鉴权\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-20T09:48:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GXL\\",\\"url\\":\\"https://www.cnblogs.com/feel-myself\\",\\"email\\":\\"gaoxiaoliang123@126.com\\"}]}"]]},"headers":[],"git":{"createdTime":1724147322000,"updatedTime":1724147322000,"contributors":[{"name":"udo-bit","email":"enote_gxl@163.com","commits":1}]},"readingTime":{"minutes":0.97,"words":291},"filePathRelative":"demo/back-ends/python/fastapi/note/用户鉴权.md","localizedDate":"August 20, 2024","excerpt":"<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>\`\`\`python</span></span>\\n<span class=\\"line\\"><span>from datetime import datetime, timedelta</span></span>\\n<span class=\\"line\\"><span>from fastapi import FastAPI, Depends, HTTPException</span></span>\\n<span class=\\"line\\"><span>from passlib.context import CryptContext</span></span>\\n<span class=\\"line\\"><span>from typing import Annotated</span></span>\\n<span class=\\"line\\"><span>import jwt</span></span>\\n<span class=\\"line\\"><span>from fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm</span></span>\\n<span class=\\"line\\"><span>from pydantic import BaseModel</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span># secret key</span></span>\\n<span class=\\"line\\"><span>SECRET_KEY = \\"bd5f13d1cf899a9c701f62592c207642e81eac9a3b172359c2feef55932b6385\\"</span></span>\\n<span class=\\"line\\"><span># 定义加密算法</span></span>\\n<span class=\\"line\\"><span>ALGORITHM = \\"HS256\\"</span></span>\\n<span class=\\"line\\"><span># 定义过期时间</span></span>\\n<span class=\\"line\\"><span>ACCESS_TOKEN_EXPIRE_MINUTES = 30</span></span>\\n<span class=\\"line\\"><span>pwb_context = CryptContext(schemes=[\\"bcrypt\\"], deprecated=\\"auto\\")</span></span>\\n<span class=\\"line\\"><span>oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\\"token\\")</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>app = FastAPI()</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>fake_users_db = {</span></span>\\n<span class=\\"line\\"><span>    \\"johndoe\\": {</span></span>\\n<span class=\\"line\\"><span>        \\"username\\": \\"johndoe\\",</span></span>\\n<span class=\\"line\\"><span>        \\"full_name\\": \\"John Doe\\",</span></span>\\n<span class=\\"line\\"><span>        \\"email\\": \\"johndoe@example.com\\",</span></span>\\n<span class=\\"line\\"><span>        \\"hashed_password\\": \\"$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW\\",</span></span>\\n<span class=\\"line\\"><span>        \\"disabled\\": False,</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>class User(BaseModel):</span></span>\\n<span class=\\"line\\"><span>    username: str</span></span>\\n<span class=\\"line\\"><span>    email: str</span></span>\\n<span class=\\"line\\"><span>    full_name: str</span></span>\\n<span class=\\"line\\"><span>    disabled: bool = None</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span># token模型</span></span>\\n<span class=\\"line\\"><span>class Token(BaseModel):</span></span>\\n<span class=\\"line\\"><span>    access_token: str</span></span>\\n<span class=\\"line\\"><span>    token_type: str</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span># 哈希加密</span></span>\\n<span class=\\"line\\"><span>def get_password_hash(password):</span></span>\\n<span class=\\"line\\"><span>    return pwb_context.hash(password)</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span># 验证密码</span></span>\\n<span class=\\"line\\"><span>def verify_password(plain_password, hashed_password):</span></span>\\n<span class=\\"line\\"><span>    return pwb_context.verify(plain_password, hashed_password)</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span># 签发token</span></span>\\n<span class=\\"line\\"><span>def create_access_token(data: dict, expires_delta: int):</span></span>\\n<span class=\\"line\\"><span>    to_encode = data.copy()</span></span>\\n<span class=\\"line\\"><span>    expire = datetime.utcnow() + timedelta(minutes=expires_delta)</span></span>\\n<span class=\\"line\\"><span>    to_encode.update({\\"exp\\": expire})</span></span>\\n<span class=\\"line\\"><span>    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)</span></span>\\n<span class=\\"line\\"><span>    return encoded_jwt</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span># 获取当前用户</span></span>\\n<span class=\\"line\\"><span>def get_current_user(token: str = Depends(oauth2_scheme)):</span></span>\\n<span class=\\"line\\"><span>    credentials_exception = HTTPException(</span></span>\\n<span class=\\"line\\"><span>        status_code=401,</span></span>\\n<span class=\\"line\\"><span>        detail=\\"Could not validate credentials\\",</span></span>\\n<span class=\\"line\\"><span>        headers={\\"WWW-Authenticate\\": \\"Bearer\\"},</span></span>\\n<span class=\\"line\\"><span>    )</span></span>\\n<span class=\\"line\\"><span>    try:</span></span>\\n<span class=\\"line\\"><span>        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])</span></span>\\n<span class=\\"line\\"><span>        username: str = payload.get(\\"sub\\")</span></span>\\n<span class=\\"line\\"><span>        if username is None:</span></span>\\n<span class=\\"line\\"><span>            raise credentials_exception</span></span>\\n<span class=\\"line\\"><span>    except jwt.PyJWTError:</span></span>\\n<span class=\\"line\\"><span>        raise credentials_exception</span></span>\\n<span class=\\"line\\"><span>    user = fake_users_db.get(username)</span></span>\\n<span class=\\"line\\"><span>    if user is None:</span></span>\\n<span class=\\"line\\"><span>        raise credentials_exception</span></span>\\n<span class=\\"line\\"><span>    return user</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span># token url</span></span>\\n<span class=\\"line\\"><span>@app.post('/token', description='获取token')</span></span>\\n<span class=\\"line\\"><span>def login_for_access_token(form_data: Annotated[OAuth2PasswordRequestForm, Depends()]):</span></span>\\n<span class=\\"line\\"><span>    user = fake_users_db.get(form_data.username)</span></span>\\n<span class=\\"line\\"><span>    if not user:</span></span>\\n<span class=\\"line\\"><span>        raise HTTPException(status_code=400, detail=\\"Incorrect username or password\\")</span></span>\\n<span class=\\"line\\"><span>    if not verify_password(form_data.password, user['hashed_password']):</span></span>\\n<span class=\\"line\\"><span>        raise HTTPException(status_code=400, detail=\\"Incorrect username or password\\")</span></span>\\n<span class=\\"line\\"><span>    access_token_expires = ACCESS_TOKEN_EXPIRE_MINUTES</span></span>\\n<span class=\\"line\\"><span>    access_token = create_access_token(data={\\"sub\\": user[\\"username\\"]}, expires_delta=access_token_expires)</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>    return {\\"access_token\\": access_token, \\"token_type\\": \\"bearer\\"}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span># 需要鉴权的业务</span></span>\\n<span class=\\"line\\"><span>@app.get('/items/', dependencies=[Depends(get_current_user)])</span></span>\\n<span class=\\"line\\"><span>def get_item():</span></span>\\n<span class=\\"line\\"><span>    return \\"hello,world\\"</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{v as comp,u as data};
