import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,d as e}from"./app-DedkmrMl.js";const i={},l=e(`<p>处理海量日志对每一个运维来说都非常的头疼，日志分析我们首先需要把需要的数据从海量的日志中匹配出来，降低数据量，然后在分析这些日志。那么从海量的日志中把我们需要的日志找出来就需要我们写一个公式来匹配，那么如何才能写一个这样的公式呢？</p><p>这节课我就给大家说说正则表达式，看起来比较高大上，其实就是通过给定的符号生成一个字符串匹配的公式，通过该公式把需要的数据匹配出来。</p><p>比如</p><ul><li>匹配正确的IP地址</li><li>匹配正确的e-mail地址</li></ul><h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式"><span>正则表达式</span></a></h2><h3 id="_1、正则表达式介绍" tabindex="-1"><a class="header-anchor" href="#_1、正则表达式介绍"><span>1、正则表达式介绍</span></a></h3><p><strong>正则表达式</strong>（Regular Expression、regex或regexp，缩写为RE），也译为正规表示法、常规表示法，是一种字符模式，用于在查找过程中匹配指定的字符。</p><p>许多程序设计语言都支持利用正则表达式进行<strong>字符串操作</strong>。例如，在Perl中就内建了一个功能强大的正则表达式引擎。</p><p>正则表达式这个概念最初是由Unix中的工具软件（例如sed和grep）普及开的。</p><p><strong>支持正则表达式的程序如：locate |find| vim| grep| sed |awk</strong></p><p><strong>正则表达式是一个三方产品，被常用计算机语言广泛使用，比如：shell、PHP、python、java、js等！</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[root@manage01 ~]# locate sko</span></span>
<span class="line"><span>locate: 无法执行 stat () \`/var/lib/mlocate/mlocate.db&#39;: 没有那个文件或目录</span></span>
<span class="line"><span></span></span>
<span class="line"><span>使用updatedb生成数据文件</span></span>
<span class="line"><span>[root@manage01 ~]# updatedb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、正则表达式特殊字符" tabindex="-1"><a class="header-anchor" href="#_2、正则表达式特殊字符"><span>2、正则表达式特殊字符</span></a></h3><p>定位符使用技巧：同时锚定开头和结尾，做精确匹配；单一锚定开头或结尾或者不锚定的，做模糊匹配。</p><table><thead><tr><th style="text-align:center;">定位符</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">^</td><td style="text-align:left;">锚定开头 ^a 以a开头 默认锚定一个字符</td></tr><tr><td style="text-align:center;">$</td><td style="text-align:left;">锚定结尾 a$ 以a结尾 默认锚定一个字符</td></tr></tbody></table><p>测试案例</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1）精确匹配  以a开头c结尾的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^ac$&quot; file </span></span>
<span class="line"><span>ac</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2）模糊匹配  以a开头</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a&quot; file </span></span>
<span class="line"><span>ac</span></span>
<span class="line"><span>ab</span></span>
<span class="line"><span>abbc</span></span>
<span class="line"><span>abcc</span></span>
<span class="line"><span>aabbcc</span></span>
<span class="line"><span>abbbc</span></span>
<span class="line"><span>abbbbbc</span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span>asb</span></span>
<span class="line"><span>aa</span></span>
<span class="line"><span>a_c</span></span>
<span class="line"><span>aZc</span></span>
<span class="line"><span>aAAAAc</span></span>
<span class="line"><span>a c</span></span>
<span class="line"><span>abababab</span></span>
<span class="line"><span>a3c</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>3）模糊匹配 以c结尾的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;c$&quot; file </span></span>
<span class="line"><span>ac</span></span>
<span class="line"><span>abbc</span></span>
<span class="line"><span>abcc</span></span>
<span class="line"><span>aabbcc</span></span>
<span class="line"><span>abbbc</span></span>
<span class="line"><span>abbbbbc</span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span>a_c</span></span>
<span class="line"><span>aZc</span></span>
<span class="line"><span>aAAAAc</span></span>
<span class="line"><span>a c</span></span>
<span class="line"><span>ccc</span></span>
<span class="line"><span>a3c</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>匹配符:匹配字符串</p><table><thead><tr><th style="text-align:center;">匹配符</th><th style="text-align:left;">说明</th><th></th></tr></thead><tbody><tr><td style="text-align:center;">.</td><td style="text-align:left;">匹配除回车以外的任意一个字符</td><td></td></tr><tr><td style="text-align:center;">( )</td><td style="text-align:left;">字符串分组</td><td></td></tr><tr><td style="text-align:center;">[ ]</td><td style="text-align:left;">定义字符类，匹配括号中的一个字符</td><td></td></tr><tr><td style="text-align:center;">[ ^ ]</td><td style="text-align:left;">表示否定括号中出现字符类中的字符,取反。</td><td></td></tr><tr><td style="text-align:center;">\\</td><td style="text-align:left;">转义字符</td><td></td></tr><tr><td style="text-align:center;">|</td><td style="text-align:left;"></td><td>或</td></tr></tbody></table><p>测试案例</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1）精确匹配  以a开头c结尾  中间任意  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a.c$&quot; file </span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span>a_c</span></span>
<span class="line"><span>aZc</span></span>
<span class="line"><span>a c</span></span>
<span class="line"><span>a3c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2）模糊匹配  以cc结尾的字符串   因为$只能锚定单个字符，如果是一个字符串就需要用()来做定义</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;(cc)$&quot; file </span></span>
<span class="line"><span>abcc</span></span>
<span class="line"><span>aabbcc</span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>ccc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3）精确匹配  以a开头c结尾  中间是a-z,0-9  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[a-z0-9]c$&quot; file </span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span>a3c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4)精确匹配  以a开头c结尾  中间不包含a-z,0-9  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[^a-z0-9]c$&quot; file </span></span>
<span class="line"><span>a_c</span></span>
<span class="line"><span>aZc</span></span>
<span class="line"><span>a c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>5）精确匹配  以e开头f结尾  中间是*号  长度为三个字节的字符串  e*f</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^e\\*f$&quot; file </span></span>
<span class="line"><span>e*f</span></span>
<span class="line"><span></span></span>
<span class="line"><span>6）精确匹配 以a开头b或c结尾  中间是任意  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a.(b|c)$&quot; file </span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span>asb</span></span>
<span class="line"><span>a_c</span></span>
<span class="line"><span>aZc</span></span>
<span class="line"><span>a c</span></span>
<span class="line"><span>a3c</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>限定符:对前面的字符或者(字符串)出现的次数做限定说明</p><table><thead><tr><th style="text-align:center;">限定符</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">*</td><td style="text-align:left;">某个字符之后加星号表示该字符不出现或出现多次 a* (ab)*</td></tr><tr><td style="text-align:center;">？</td><td style="text-align:left;">与星号相似，但略有变化，表示该字符出现一次或不出现</td></tr><tr><td style="text-align:center;">+</td><td style="text-align:left;">与星号相似，表示其前面字符出现一次或多次，但必须出现一次</td></tr><tr><td style="text-align:center;"><code>{n,m}</code></td><td style="text-align:left;">某个字符之后出现，表示该字符最少n次，最多m次</td></tr><tr><td style="text-align:center;"><code>{m}</code></td><td style="text-align:left;">正好出现了m次</td></tr></tbody></table><p>测试案例</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1）精确匹配 以a开头 c结尾 中间是有b或者没有b 长度不限的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^ab*c$&quot; file </span></span>
<span class="line"><span>ac</span></span>
<span class="line"><span>abbc</span></span>
<span class="line"><span>abbbc</span></span>
<span class="line"><span>abbbbbc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2）精确匹配 以a开头 c结尾 中间只出现一次b或者没有b的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^ab?c$&quot; file </span></span>
<span class="line"><span>ac</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3）精确匹配 以a开头 c结尾 中间是有b且至少出现一次 长度不限的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^ab+c$&quot; file </span></span>
<span class="line"><span>abbc</span></span>
<span class="line"><span>abbbc</span></span>
<span class="line"><span>abbbbbc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4）精确匹配 以a开头 c结尾 中间是有b且至少出现两次最多出现四次 长度不限的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^ab{2,4}c$&quot; file </span></span>
<span class="line"><span>abbc</span></span>
<span class="line"><span>abbbc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>5）精确匹配 以a开头 c结尾 中间是有b且正好出现三次的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^ab{3}c$&quot; file </span></span>
<span class="line"><span>abbbc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>6) 精确匹配 以a开头 c结尾 中间是有b且至少出现一次的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^ab{1,}c$&quot; file </span></span>
<span class="line"><span>abbc</span></span>
<span class="line"><span>abbbc</span></span>
<span class="line"><span>abbbbbc</span></span>
<span class="line"><span>abc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、正则表达式posix字符" tabindex="-1"><a class="header-anchor" href="#_3、正则表达式posix字符"><span>3、正则表达式POSIX字符</span></a></h3><p><strong>posix字符一次只匹配一个范围中的一个字节</strong></p><table><thead><tr><th style="text-align:center;">特殊字符</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">[:alnum:]</td><td style="text-align:left;">匹配任意字母字符0-9 a-z A-Z</td></tr><tr><td style="text-align:center;">[:alpha:]</td><td style="text-align:left;">匹配任意字母，大写或小写</td></tr><tr><td style="text-align:center;">[:digit:]</td><td style="text-align:left;">数字 0-9</td></tr><tr><td style="text-align:center;">[:graph:]</td><td style="text-align:left;">非空字符( 非空格控制字符)</td></tr><tr><td style="text-align:center;">[:lower:]</td><td style="text-align:left;">小写字符a-z</td></tr><tr><td style="text-align:center;">[:upper:]</td><td style="text-align:left;">大写字符A-Z</td></tr><tr><td style="text-align:center;">[:cntrl:]</td><td style="text-align:left;">控制字符</td></tr><tr><td style="text-align:center;">[:print:]</td><td style="text-align:left;">非空字符( 包括空格)</td></tr><tr><td style="text-align:center;">[:punct:]</td><td style="text-align:left;">标点符号</td></tr><tr><td style="text-align:center;">[:blank:]</td><td style="text-align:left;">空格和TAB字符</td></tr><tr><td style="text-align:center;">[:xdigit:]</td><td style="text-align:left;">16 进制数字</td></tr><tr><td style="text-align:center;">[:space:]</td><td style="text-align:left;">所有空白字符( 新行、空格、制表符)</td></tr></tbody></table><p>测试案例</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>注意[[ ]]  双中括号的意思:  第一个中括号是匹配符[] 匹配中括号中的任意一个字符，第二个[]是格式 如[:digit:]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1）精确匹配  以a开头c结尾  中间a-zA-Z0-9任意字符  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[[:alnum:]]c$&quot; file</span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span>aZc</span></span>
<span class="line"><span>a3c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2）精确匹配  以a开头c结尾  中间是a-zA-Z任意字符  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[[:alpha:]]c$&quot; file</span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span>aZc</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>3）精确匹配  以a开头c结尾  中间是0-9任意字符  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[[:digit:]]c$&quot; file</span></span>
<span class="line"><span>a3c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4）精确匹配  以a开头c结尾  中间是a-z任意字符  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[[:lower:]]c$&quot; file</span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>4）精确匹配  以a开头c结尾  中间是A-Z任意字符  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[[:upper:]]c$&quot; file</span></span>
<span class="line"><span>aZc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>5）精确匹配  以a开头c结尾  中间是非空任意字符  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[[:print:]]c$&quot; file</span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span>a_c</span></span>
<span class="line"><span>aZc</span></span>
<span class="line"><span>a c</span></span>
<span class="line"><span>a3c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>6）精确匹配  以a开头c结尾  中间是符号字符  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[[:punct:]]c$&quot; file</span></span>
<span class="line"><span>a_c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>7）精确匹配  以a开头c结尾  中间是空格或者TAB符字符  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[[:blank:]]c$&quot; file</span></span>
<span class="line"><span>a c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>类似</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[[:space:]]c$&quot; file</span></span>
<span class="line"><span>a c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>8）精确匹配  以a开头c结尾  中间是十六进制字符  长度为三个字节的字符串</span></span>
<span class="line"><span>[root@zutuanxue ~]# egrep &quot;^a[[:xdigit:]]c$&quot; file</span></span>
<span class="line"><span>acc</span></span>
<span class="line"><span>abc</span></span>
<span class="line"><span>a3c</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>说明：特殊字符和POSIX字符是两套字符，都可以完成需要的匹配，大家学习的时候最少要记住一套字符并熟练应用。</strong></p><h3 id="_4、练习案例" tabindex="-1"><a class="header-anchor" href="#_4、练习案例"><span>4、练习案例</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1、IP匹配公式</span></span>
<span class="line"><span>grep &#39;^((25[0-5]|2[0-4][[:digit:]]|[01]?[[:digit:]][[:digit:]]?).){3}(25[0-5]|2[0-4][[:digit:]]|[01]?[[:digit:]][[:digit:]]?)$&#39; --color ip_base</span></span>
<span class="line"><span>2、E-MAIL地址匹配公式</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33),p=[l];function t(c,d){return a(),s("div",null,p)}const u=n(i,[["render",t],["__file","正则表达式.html.vue"]]),b=JSON.parse('{"path":"/demo/back-ends/Linux/Shell%E8%84%9A%E6%9C%AC/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html","title":"正则表达式","lang":"en-US","frontmatter":{"title":"正则表达式","icon":"code","category":"shell","order":21,"description":"处理海量日志对每一个运维来说都非常的头疼，日志分析我们首先需要把需要的数据从海量的日志中匹配出来，降低数据量，然后在分析这些日志。那么从海量的日志中把我们需要的日志找出来就需要我们写一个公式来匹配，那么如何才能写一个这样的公式呢？ 这节课我就给大家说说正则表达式，看起来比较高大上，其实就是通过给定的符号生成一个字符串匹配的公式，通过该公式把需要的数据匹...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/demo/back-ends/Linux/Shell%E8%84%9A%E6%9C%AC/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Utopia"}],["meta",{"property":"og:title","content":"正则表达式"}],["meta",{"property":"og:description","content":"处理海量日志对每一个运维来说都非常的头疼，日志分析我们首先需要把需要的数据从海量的日志中匹配出来，降低数据量，然后在分析这些日志。那么从海量的日志中把我们需要的日志找出来就需要我们写一个公式来匹配，那么如何才能写一个这样的公式呢？ 这节课我就给大家说说正则表达式，看起来比较高大上，其实就是通过给定的符号生成一个字符串匹配的公式，通过该公式把需要的数据匹..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-21T02:46:20.000Z"}],["meta",{"property":"article:author","content":"GXL"}],["meta",{"property":"article:modified_time","content":"2024-09-21T02:46:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"正则表达式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-21T02:46:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GXL\\",\\"url\\":\\"https://www.cnblogs.com/feel-myself\\",\\"email\\":\\"gaoxiaoliang123@126.com\\"}]}"]]},"headers":[{"level":2,"title":"正则表达式","slug":"正则表达式","link":"#正则表达式","children":[{"level":3,"title":"1、正则表达式介绍","slug":"_1、正则表达式介绍","link":"#_1、正则表达式介绍","children":[]},{"level":3,"title":"2、正则表达式特殊字符","slug":"_2、正则表达式特殊字符","link":"#_2、正则表达式特殊字符","children":[]},{"level":3,"title":"3、正则表达式POSIX字符","slug":"_3、正则表达式posix字符","link":"#_3、正则表达式posix字符","children":[]},{"level":3,"title":"4、练习案例","slug":"_4、练习案例","link":"#_4、练习案例","children":[]}]}],"git":{"createdTime":1726886780000,"updatedTime":1726886780000,"contributors":[{"name":"udo-bit","email":"enote_gxl@163.com","commits":1}]},"readingTime":{"minutes":6.49,"words":1946},"filePathRelative":"demo/back-ends/Linux/Shell脚本/正则表达式.md","localizedDate":"September 21, 2024","excerpt":"<p>处理海量日志对每一个运维来说都非常的头疼，日志分析我们首先需要把需要的数据从海量的日志中匹配出来，降低数据量，然后在分析这些日志。那么从海量的日志中把我们需要的日志找出来就需要我们写一个公式来匹配，那么如何才能写一个这样的公式呢？</p>\\n<p>这节课我就给大家说说正则表达式，看起来比较高大上，其实就是通过给定的符号生成一个字符串匹配的公式，通过该公式把需要的数据匹配出来。</p>\\n<p>比如</p>\\n<ul>\\n<li>匹配正确的IP地址</li>\\n<li>匹配正确的e-mail地址</li>\\n</ul>\\n<h2>正则表达式</h2>\\n<h3>1、正则表达式介绍</h3>\\n<p><strong>正则表达式</strong>（Regular Expression、regex或regexp，缩写为RE），也译为正规表示法、常规表示法，是一种字符模式，用于在查找过程中匹配指定的字符。</p>","autoDesc":true}');export{u as comp,b as data};
