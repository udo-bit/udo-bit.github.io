import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as a,d as e}from"./app-B3Z58FXn.js";const i={},l=e(`<p>计算机程序其实就是三步:输入、运算、输出，这个理论也适应于shell编程。</p><p>那么计算机是如何将信息按照比较舒服的格式输出到屏幕或者KFC的打印纸上的呢！如果让计算机能够输出一种格式，让人看起来很舒服，那么我们就要学习一下计算机的格式化输出，让计算机程序将信息输出的时候美美哒！让人一目了然看到需要的信息。</p><h2 id="一、shell格式化输出" tabindex="-1"><a class="header-anchor" href="#一、shell格式化输出"><span>一、shell格式化输出</span></a></h2><p>一个赏心悦目的界面是一个程序给用户的第一个映像，好的界面可以让用户更加容易上手使用。windows之所以能被个人用户喜欢就是因为它的界面更加容易和用户交互，只要用户能识别文字，懂得点击鼠标就能操作电脑；而linux之所以无法被广大个人用户使用的瓶颈就是图形界面无法完成所有工作，需要命令配合才可以，这就把非专业用户拒之门外了，想用就必须去学习命令。 我们在使用shell写一个程序的时候，如果想让广大的用户都能使用，都能快速上手，那么好的交互界面就太重要了。我们可以使用多种方法开发好的、易交互的界面，常用的工具有：dialog、echo、printf等命令。 本节课主要给大家介绍一个最简单易用的命令：echo</p><h4 id="_1、echo命令" tabindex="-1"><a class="header-anchor" href="#_1、echo命令"><span>1、echo命令</span></a></h4><p><strong>功能：将内容输出到默认显示设备</strong></p><p><strong>应用场景：需要计算机程序输出的地方</strong></p><p>echo命令的功能是在显示器上显示一段文字，一般起到一个提示的作用。 功能说明:显示文字。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>语法:echo [-ne][字符串]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>补充说明:</span></span>
<span class="line"><span>1、echo会将输入的字符串送往标准输出。</span></span>
<span class="line"><span>2、输出的字符串间以空白字符隔开,并在最后加上换行号。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>OPTIONS：</span></span>
<span class="line"><span>-n	不要在最后自动换行</span></span>
<span class="line"><span>-e	若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文字输出:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>转义字符</span></span>
<span class="line"><span>\\a	发出警告声;</span></span>
<span class="line"><span>\\b	删除前一个字符;</span></span>
<span class="line"><span>\\t	插入tab;</span></span>
<span class="line"><span>\\n	换行且光标移至行首;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\\c	最后不加上换行符号;</span></span>
<span class="line"><span>\\f	换行但光标仍旧停留在原来的位置;</span></span>
<span class="line"><span>\\r	光标移至行首，但不换行;</span></span>
<span class="line"><span>\\v	与\\f相同;</span></span>
<span class="line"><span>\\		插入\\字符;</span></span>
<span class="line"><span>\\0nnn	打印nnn(八进制)所代表的ASCII字符;  备注：数字0  不要理解成字母o</span></span>
<span class="line"><span>\\xNN  打印NN(十六进制)所代表的ASCII字符;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-–help	显示帮助</span></span>
<span class="line"><span>-–version显示版本信息</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>你的进制转换过关吗？</span></span>
<span class="line"><span>[root@zutuanxue ~]# echo -e &quot;\\0123&quot;   #ot(123) = 83  对应ascii表的S</span></span>
<span class="line"><span>S</span></span>
<span class="line"><span>[root@zutuanxue ~]# echo -e &quot;\\x61&quot;   #ox(61) = 97  对应ascii表的a</span></span>
<span class="line"><span>a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、输出颜色字体" tabindex="-1"><a class="header-anchor" href="#_2、输出颜色字体"><span>2、输出颜色字体</span></a></h4><p>脚本中echo显示内容带颜色显示,echo显示带颜色，<strong>需要使用参数-e</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>格式如下：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>echo -e &quot;\\033[字背景颜色；文字颜色m字符串\\033[0m&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如： echo -e “\\033[41;36m something here \\033[0m”</p><p>其中41的位置代表底色， 36m的位置是代表字的颜色</p><p>1、字背景颜色和文字颜色之间是英文的</p><p>2、文字颜色后面有个m</p><p>3、字符串前后可以没有空格，如果有的话，输出也是同样有空格</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>下面是相应的字和背景颜色，可以自己来尝试找出不同颜色搭配</span></span>
<span class="line"><span></span></span>
<span class="line"><span>　　例</span></span>
<span class="line"><span>　　echo -e “\\033[31m 红色字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[34m 黄色字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[41;33m 红底黄字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[41;37m 红底白字 \\033[0m”</span></span>
<span class="line"><span>　　</span></span>
<span class="line"><span>字颜色：30—–37</span></span>
<span class="line"><span>　　echo -e “\\033[30m 黑色字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[31m 红色字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[32m 绿色字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[33m 黄色字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[34m 蓝色字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[35m 紫色字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[36m 天蓝字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[37m 白色字 \\033[0m”</span></span>
<span class="line"><span></span></span>
<span class="line"><span>　　</span></span>
<span class="line"><span>字背景颜色范围：40—–47</span></span>
<span class="line"><span>　　echo -e “\\033[40;37m 黑底白字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[41;37m 红底白字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[42;37m 绿底白字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[43;37m 黄底白字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[44;37m 蓝底白字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[45;37m 紫底白字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[46;37m 天蓝底白字 \\033[0m”</span></span>
<span class="line"><span>　　echo -e “\\033[47;30m 白底黑字 \\033[0m”</span></span>
<span class="line"><span>　　</span></span>
<span class="line"><span>最后面控制选项说明</span></span>
<span class="line"><span>　　\\033[0m 关闭所有属性</span></span>
<span class="line"><span>　　\\033[1m 设置高亮度</span></span>
<span class="line"><span>　　\\033[4m 下划线</span></span>
<span class="line"><span>　　\\033[5m 闪烁</span></span>
<span class="line"><span>　　\\033[7m 反显</span></span>
<span class="line"><span>　　\\033[8m 消隐</span></span>
<span class="line"><span></span></span>
<span class="line"><span>　　\\033[30m — \\33[37m </span></span>
<span class="line"><span></span></span>
<span class="line"><span>设置前景色</span></span>
<span class="line"><span>　　\\033[40m — \\33[47m 设置背景色</span></span>
<span class="line"><span>　　</span></span>
<span class="line"><span>　　</span></span>
<span class="line"><span>　　\\033[nA 光标上移n行</span></span>
<span class="line"><span>　　\\033[nB 光标下移n行</span></span>
<span class="line"><span>　　\\033[nC 光标右移n行</span></span>
<span class="line"><span>　　\\033[nD 光标左移n行</span></span>
<span class="line"><span>　　\\033[y;xH设置光标位置</span></span>
<span class="line"><span>　　\\033[2J 清屏</span></span>
<span class="line"><span>　　\\033[K 清除从光标到行尾的内容</span></span>
<span class="line"><span>　　\\33[s 保存光标位置</span></span>
<span class="line"><span>　　\\033[u 恢复光标位置</span></span>
<span class="line"><span>　　\\033[?25l 隐藏光标</span></span>
<span class="line"><span>　　\\033[?25h 显示光标</span></span>
<span class="line"><span>　　</span></span>
<span class="line"><span>用法例子  光标下移三行　　</span></span>
<span class="line"><span>[root@zutuanxue ~]# echo -e &quot;\\033[0m today is fine \\033[3B&quot;</span></span>
<span class="line"><span> today is fine</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、jobs" tabindex="-1"><a class="header-anchor" href="#_3、jobs"><span>3、jobs</span></a></h4><p>需求：输出一个水果购物界面 fruits_shop.sh</p><figure><img src="https://www.zutuanxue.com:8000/static/media/images/2020/9/24/1600908891935.png" alt="image20190612094713385.png" tabindex="0" loading="lazy"><figcaption>image20190612094713385.png</figcaption></figure><p>案例要点：</p><ul><li>echo输出缩进问题</li><li>字体颜色输出</li></ul><p>代码实现：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>job代码    01_fruits_shop.sh</span></span>
<span class="line"><span>#!/bin/bash</span></span>
<span class="line"><span># </span></span>
<span class="line"><span>#Author: www.zutuanxue.com</span></span>
<span class="line"><span>#Release: </span></span>
<span class="line"><span>#Description:打印水果超市列表</span></span>
<span class="line"><span></span></span>
<span class="line"><span>echo -e &quot;\\t\\t    \\033[32m Fruits List \\033[0m      \\n&quot;</span></span>
<span class="line"><span>echo -e &quot;\\t   \\033[31mFruit\\033[0m   \\t\\t \\033[31mPrice\\033[0m \\t\\t\\033[31mWeight\\033[0m&quot;</span></span>
<span class="line"><span>echo -e &quot;\\t\\033[34m1)Apple\\t\\t￥10.00\\t\\t1KG\\033[0m&quot;</span></span>
<span class="line"><span>echo -e &quot;\\t\\033[34m2)Banana\\t￥9.00\\t\\t1KG\\033[0m&quot;</span></span>
<span class="line"><span>echo -e &quot;\\t\\033[34m3)Orange\\t￥15.20\\t\\t1KG\\033[0m&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),p=[l];function c(d,t){return a(),n("div",null,p)}const v=s(i,[["render",c],["__file","shell脚本格式化输出.html.vue"]]),o=JSON.parse('{"path":"/demo/back-ends/Linux/Shell%E8%84%9A%E6%9C%AC/shell%E8%84%9A%E6%9C%AC%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA.html","title":"shell脚本格式化输出","lang":"en-US","frontmatter":{"title":"shell脚本格式化输出","icon":"code","category":"shell","order":6,"description":"计算机程序其实就是三步:输入、运算、输出，这个理论也适应于shell编程。 那么计算机是如何将信息按照比较舒服的格式输出到屏幕或者KFC的打印纸上的呢！如果让计算机能够输出一种格式，让人看起来很舒服，那么我们就要学习一下计算机的格式化输出，让计算机程序将信息输出的时候美美哒！让人一目了然看到需要的信息。 一、shell格式化输出 一个赏心悦目的界面是一...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/demo/back-ends/Linux/Shell%E8%84%9A%E6%9C%AC/shell%E8%84%9A%E6%9C%AC%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA.html"}],["meta",{"property":"og:site_name","content":"Utopia"}],["meta",{"property":"og:title","content":"shell脚本格式化输出"}],["meta",{"property":"og:description","content":"计算机程序其实就是三步:输入、运算、输出，这个理论也适应于shell编程。 那么计算机是如何将信息按照比较舒服的格式输出到屏幕或者KFC的打印纸上的呢！如果让计算机能够输出一种格式，让人看起来很舒服，那么我们就要学习一下计算机的格式化输出，让计算机程序将信息输出的时候美美哒！让人一目了然看到需要的信息。 一、shell格式化输出 一个赏心悦目的界面是一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.zutuanxue.com:8000/static/media/images/2020/9/24/1600908891935.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-21T02:46:20.000Z"}],["meta",{"property":"article:author","content":"GXL"}],["meta",{"property":"article:modified_time","content":"2024-09-21T02:46:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"shell脚本格式化输出\\",\\"image\\":[\\"https://www.zutuanxue.com:8000/static/media/images/2020/9/24/1600908891935.png\\"],\\"dateModified\\":\\"2024-09-21T02:46:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GXL\\",\\"url\\":\\"https://www.cnblogs.com/feel-myself\\",\\"email\\":\\"gaoxiaoliang123@126.com\\"}]}"]]},"headers":[{"level":2,"title":"一、shell格式化输出","slug":"一、shell格式化输出","link":"#一、shell格式化输出","children":[]}],"git":{"createdTime":1726886780000,"updatedTime":1726886780000,"contributors":[{"name":"udo-bit","email":"enote_gxl@163.com","commits":1}]},"readingTime":{"minutes":4.73,"words":1419},"filePathRelative":"demo/back-ends/Linux/Shell脚本/shell脚本格式化输出.md","localizedDate":"September 21, 2024","excerpt":"<p>计算机程序其实就是三步:输入、运算、输出，这个理论也适应于shell编程。</p>\\n<p>那么计算机是如何将信息按照比较舒服的格式输出到屏幕或者KFC的打印纸上的呢！如果让计算机能够输出一种格式，让人看起来很舒服，那么我们就要学习一下计算机的格式化输出，让计算机程序将信息输出的时候美美哒！让人一目了然看到需要的信息。</p>\\n<h2>一、shell格式化输出</h2>\\n<p>一个赏心悦目的界面是一个程序给用户的第一个映像，好的界面可以让用户更加容易上手使用。windows之所以能被个人用户喜欢就是因为它的界面更加容易和用户交互，只要用户能识别文字，懂得点击鼠标就能操作电脑；而linux之所以无法被广大个人用户使用的瓶颈就是图形界面无法完成所有工作，需要命令配合才可以，这就把非专业用户拒之门外了，想用就必须去学习命令。\\n我们在使用shell写一个程序的时候，如果想让广大的用户都能使用，都能快速上手，那么好的交互界面就太重要了。我们可以使用多种方法开发好的、易交互的界面，常用的工具有：dialog、echo、printf等命令。\\n本节课主要给大家介绍一个最简单易用的命令：echo</p>","autoDesc":true}');export{v as comp,o as data};
