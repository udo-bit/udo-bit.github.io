import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,d as e}from"./app-CNa1Rd_2.js";const n={},t=e(`<h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标"><span>目标</span></a></h2><ol><li>配置依赖库</li><li>配置自动导入插件</li></ol><h2 id="依赖库配置" tabindex="-1"><a class="header-anchor" href="#依赖库配置"><span>依赖库配置</span></a></h2><p>首先我们需要安装一下我们需要用到的UI库和工具库：<a href="https://www.naiveui.com/zh-CN/os-theme" target="_blank" rel="noopener noreferrer">naive-ui</a>、<a href="https://vueuse.org/" target="_blank" rel="noopener noreferrer">vueuse</a>。 然后我们还需要安装一些按需加载的插件：<a href="https://github.com/antfu/unplugin-auto-import" target="_blank" rel="noopener noreferrer">unplugin-auto-import</a>、<a href="https://github.com/antfu/unplugin-vue-components" target="_blank" rel="noopener noreferrer">unplugin-vue-components</a>。 路由库：<a href="https://router.vuejs.org/zh/introduction.html" target="_blank" rel="noopener noreferrer">vue-router</a> 状态管理库：<a href="https://pinia.vuejs.org/" target="_blank" rel="noopener noreferrer">pinia</a> 多语言：<a href="https://vue-i18n.intlify.dev/" target="_blank" rel="noopener noreferrer">vue-i18n</a> 开启vue的<a href="https://cn.vuejs.org/guide/extras/reactivity-transform.html#refs-vs-reactive-variables" target="_blank" rel="noopener noreferrer">响应式语法糖</a></p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> naive-ui</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unplugin-auto-import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unplugin-vue-components</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -D</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @vueuse/core</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vue-router</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pinia</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vue-i18n</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h3><p>首先我们需要在根目录下创建一个types的文件夹，用于存放我们的类型文件。 将src/vite-env.d.ts移动到types文件夹中，并改名为env.d.ts 接下来配置一下vite.config.ts中的插件：</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:[</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      // 响应式语法糖</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      reactivityTransform</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    AutoImport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      // 配置需要自动导入的库</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      imports</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;vue&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;vue/macros&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;vue-router&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;vue-i18n&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;@vueuse/core&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;pinia&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          &#39;naive-ui&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;useDialog&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;useMessage&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;useNotification&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &#39;useLoadingBar&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          ],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ],</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      // 生成到的地址</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      dts</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;types/auto-imports.d.ts&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      // 配置本地需要自动导入的库</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      dirs</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // pinia状态管理目录</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;src/stores&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">        // 自定义组合式api目录</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &#39;src/composables&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    Components</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      // 导入naiveui的配置项目</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      resolvers</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NaiveUiResolver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()],</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      // 生成类型的地址</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      dts</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;types/components.d.ts&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成配置启动项目进行测试。</p><p>我们测试一下自动导入的函数和组件的自动导入能不能正常使用。</p><p>我们发现自动导入组件可以正常使用但是没有代码提示， <img src="https://cdn.nlark.com/yuque/0/2022/png/10377041/1667778607785-9a6a3184-58db-498c-bae3-388f87e28f5b.png#clientId=u6ecc8eb3-54c7-4&amp;from=paste&amp;height=201&amp;id=u3f2d3be8&amp;name=image.png&amp;originHeight=201&amp;originWidth=517&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=34378&amp;status=done&amp;style=none&amp;taskId=uebf23678-a98b-4779-b65d-e64567586c5&amp;title=&amp;width=517" alt="image.png" loading="lazy"> 我们看到types/components.d.ts的目录中发现，插件使用的是@vue/runtime-core来实现的类型，那么我们在开发环境下也安装一下：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @vue/runtime-core</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -D</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://cdn.nlark.com/yuque/0/2022/png/10377041/1667778640792-6985ac06-3d20-4384-b800-d2bbacf09f0d.png#clientId=u6ecc8eb3-54c7-4&amp;from=paste&amp;height=119&amp;id=u7a8aa5dc&amp;name=image.png&amp;originHeight=119&amp;originWidth=417&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=12534&amp;status=done&amp;style=none&amp;taskId=u65035269-b457-42eb-b2c1-b65e981ffe1&amp;title=&amp;width=417" alt="image.png" loading="lazy"> 启动项目可以正常提示了。</p><p>当我们测试使用的时候发现函数没有自动导入的提示，我们看一下tsconfig.json中，在include中加上</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> &quot;include&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src/**/*.ts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src/**/*.d.ts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src/**/*.tsx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src/**/*.vue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;types/**/*.d.ts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&quot;types/**/*.d.ts&quot;</code>我们再来试一下。可以正常使用了。</p>`,17),l=[t];function p(r,h){return a(),s("div",null,l)}const o=i(n,[["render",p],["__file","05-项目配置(上).html.vue"]]),c=JSON.parse('{"path":"/demo/front/vue/note/vite_ts/05-%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE(%E4%B8%8A).html","title":"05-项目配置(上)","lang":"en-US","frontmatter":{"title":"05-项目配置(上)","order":5,"description":"目标 配置依赖库 配置自动导入插件 依赖库配置 首先我们需要安装一下我们需要用到的UI库和工具库：naive-ui、vueuse。 然后我们还需要安装一些按需加载的插件：unplugin-auto-import、unplugin-vue-components。 路由库：vue-router 状态管理库：pinia 多语言：vue-i18n 开启vue的...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/demo/front/vue/note/vite_ts/05-%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE(%E4%B8%8A).html"}],["meta",{"property":"og:site_name","content":"Utopia"}],["meta",{"property":"og:title","content":"05-项目配置(上)"}],["meta",{"property":"og:description","content":"目标 配置依赖库 配置自动导入插件 依赖库配置 首先我们需要安装一下我们需要用到的UI库和工具库：naive-ui、vueuse。 然后我们还需要安装一些按需加载的插件：unplugin-auto-import、unplugin-vue-components。 路由库：vue-router 状态管理库：pinia 多语言：vue-i18n 开启vue的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.nlark.com/yuque/0/2022/png/10377041/1667778607785-9a6a3184-58db-498c-bae3-388f87e28f5b.png#clientId=u6ecc8eb3-54c7-4&from=paste&height=201&id=u3f2d3be8&name=image.png&originHeight=201&originWidth=517&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34378&status=done&style=none&taskId=uebf23678-a98b-4779-b65d-e64567586c5&title=&width=517"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-08-19T02:04:14.000Z"}],["meta",{"property":"article:author","content":"GXL"}],["meta",{"property":"article:modified_time","content":"2024-08-19T02:04:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"05-项目配置(上)\\",\\"image\\":[\\"https://cdn.nlark.com/yuque/0/2022/png/10377041/1667778607785-9a6a3184-58db-498c-bae3-388f87e28f5b.png#clientId=u6ecc8eb3-54c7-4&from=paste&height=201&id=u3f2d3be8&name=image.png&originHeight=201&originWidth=517&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34378&status=done&style=none&taskId=uebf23678-a98b-4779-b65d-e64567586c5&title=&width=517\\",\\"https://cdn.nlark.com/yuque/0/2022/png/10377041/1667778640792-6985ac06-3d20-4384-b800-d2bbacf09f0d.png#clientId=u6ecc8eb3-54c7-4&from=paste&height=119&id=u7a8aa5dc&name=image.png&originHeight=119&originWidth=417&originalType=binary&ratio=1&rotation=0&showTitle=false&size=12534&status=done&style=none&taskId=u65035269-b457-42eb-b2c1-b65e981ffe1&title=&width=417\\"],\\"dateModified\\":\\"2024-08-19T02:04:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GXL\\",\\"url\\":\\"https://www.cnblogs.com/feel-myself\\",\\"email\\":\\"gaoxiaoliang123@126.com\\"}]}"]]},"headers":[{"level":2,"title":"目标","slug":"目标","link":"#目标","children":[]},{"level":2,"title":"依赖库配置","slug":"依赖库配置","link":"#依赖库配置","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"配置","slug":"配置","link":"#配置","children":[]}]}],"git":{"createdTime":1724033054000,"updatedTime":1724033054000,"contributors":[{"name":"udo-bit","email":"enote_gxl@163.com","commits":1}]},"readingTime":{"minutes":2.02,"words":607},"filePathRelative":"demo/front/vue/note/vite+ts/05-项目配置(上).md","localizedDate":"August 19, 2024","excerpt":"<h2>目标</h2>\\n<ol>\\n<li>配置依赖库</li>\\n<li>配置自动导入插件</li>\\n</ol>\\n<h2>依赖库配置</h2>\\n<p>首先我们需要安装一下我们需要用到的UI库和工具库：<a href=\\"https://www.naiveui.com/zh-CN/os-theme\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">naive-ui</a>、<a href=\\"https://vueuse.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">vueuse</a>。\\n然后我们还需要安装一些按需加载的插件：<a href=\\"https://github.com/antfu/unplugin-auto-import\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">unplugin-auto-import</a>、<a href=\\"https://github.com/antfu/unplugin-vue-components\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">unplugin-vue-components</a>。\\n路由库：<a href=\\"https://router.vuejs.org/zh/introduction.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">vue-router</a>\\n状态管理库：<a href=\\"https://pinia.vuejs.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">pinia</a>\\n多语言：<a href=\\"https://vue-i18n.intlify.dev/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">vue-i18n</a>\\n开启vue的<a href=\\"https://cn.vuejs.org/guide/extras/reactivity-transform.html#refs-vs-reactive-variables\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">响应式语法糖</a></p>","autoDesc":true}');export{o as comp,c as data};
