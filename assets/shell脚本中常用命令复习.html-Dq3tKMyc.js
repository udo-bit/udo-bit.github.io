import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as a,d as i}from"./app-B3Z58FXn.js";const l={},e=i(`<p>shell脚本可以让降低大家的工作强度，提升大家的管理能力和薪资报酬，还可以让大家有时间学习提升自己，更能让你有时间喝茶撩妹子。所以，学好shell那就是非常必要的啦，那么在学习shell之前我们得热热身，做一下准备工作了。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>学习之前首先要弄清什么是shell脚本：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	shell脚本本质上就是要将完成一件事情的所有命令按照执行的先后顺序写入一个文件，并给予文件执行权限</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>so！想学好shell脚本首先要考核一下自己的linux命令学的是否扎实，接下来为了能让大家学习shell更加顺畅，我把常用的一些数据处理的命令给大家回顾一下。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>我们重点回顾以下几类命令</span></span>
<span class="line"><span></span></span>
<span class="line"><span>数据检索命令</span></span>
<span class="line"><span></span></span>
<span class="line"><span>         行检索：grep  egrep</span></span>
<span class="line"><span></span></span>
<span class="line"><span>         字符串检索:cut  tr</span></span>
<span class="line"><span></span></span>
<span class="line"><span>数据处理命令       </span></span>
<span class="line"><span></span></span>
<span class="line"><span>	数据排序：sort</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  	数据去重: uniq</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  	文本数据合并: paste</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  	数据输出: tee</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  	数据处理: xargs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一、-数据处理命令" tabindex="-1"><a class="header-anchor" href="#一、-数据处理命令"><span>一、 数据处理命令</span></a></h2><h3 id="_1、grep-负责从数据源中检索对应的字符串-行过滤。" tabindex="-1"><a class="header-anchor" href="#_1、grep-负责从数据源中检索对应的字符串-行过滤。"><span>1、grep: 负责从数据源中检索对应的字符串，行过滤。</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>grep用于根据关键字进行行过滤</span></span>
<span class="line"><span>grep options &#39;keys&#39; filename</span></span>
<span class="line"><span>OPTIONS:</span></span>
<span class="line"><span>    -i: 不区分大小写</span></span>
<span class="line"><span>    -v: 查找不包含指定内容的行,反向选择</span></span>
<span class="line"><span>    -w: 按单词搜索</span></span>
<span class="line"><span>    -n: 显示行号</span></span>
<span class="line"><span>    -A: 显示匹配行及后面多少行 -A 5</span></span>
<span class="line"><span>    -B: 显示匹配行及前面多少行</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    -o: 打印匹配关键字</span></span>
<span class="line"><span>    -c: 统计匹配到的次数</span></span>
<span class="line"><span>    -r: 逐层遍历目录查找</span></span>
<span class="line"><span>    -C: 显示匹配行前后多少行</span></span>
<span class="line"><span>    -l：只列出匹配的文件名</span></span>
<span class="line"><span>    -L：列出不匹配的文件名</span></span>
<span class="line"><span>    -e: 使用正则匹配</span></span>
<span class="line"><span>    -E:使用扩展正则匹配</span></span>
<span class="line"><span>    ^key:以关键字开头</span></span>
<span class="line"><span>    key$:以关键字结尾</span></span>
<span class="line"><span>    ^$:匹配空行</span></span>
<span class="line"><span>    --color=auto ：可以将找到的关键词部分加上颜色的显示</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>常用命令选项必知必会  示例：</span></span>
<span class="line"><span># grep -i root passwd 忽略大小写匹配包含root的行</span></span>
<span class="line"><span># grep -w ftp passwd 精确匹配ftp单词</span></span>
<span class="line"><span># grep -wo ftp passwd 打印匹配到的关键字ftp</span></span>
<span class="line"><span># grep -n root passwd 打印匹配到root关键字的行好</span></span>
<span class="line"><span># grep -ni root passwd 忽略大小写匹配统计包含关键字root的行</span></span>
<span class="line"><span># grep -nic root passwd 忽略大小写匹配统计包含关键字root的行数</span></span>
<span class="line"><span># grep -i ^root passwd 忽略大小写匹配以root开头的行</span></span>
<span class="line"><span># grep bash$ passwd 匹配以bash结尾的行</span></span>
<span class="line"><span># grep -n ^$ passwd 匹配空行并打印行号</span></span>
<span class="line"><span># grep ^# /etc/vsftpd/vsftpd.conf 匹配以#号开头的行</span></span>
<span class="line"><span># grep -v ^# /etc/vsftpd/vsftpd.conf 匹配不以#号开头的行</span></span>
<span class="line"><span># grep -A 5 mail passwd   匹配包含mail关键字及其后5行</span></span>
<span class="line"><span># grep -B 5 mail passwd   匹配包含mail关键字及其前5行</span></span>
<span class="line"><span># grep -C 5 mail passwd 匹配包含mail关键字及其前后5行</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>centos8中已经为大家设置了，存放在/etc/profile.d/colorgrep.sh文件中，如若大家使用的系统中没有设置颜色输出，</span></span>
<span class="line"><span>可以使用以下方法来自行设置</span></span>
<span class="line"><span></span></span>
<span class="line"><span>临时设置：</span></span>
<span class="line"><span># alias grep=&#39;grep --color=auto&#39; //只针对当前终端和当前用户生效</span></span>
<span class="line"><span></span></span>
<span class="line"><span>永久设置：</span></span>
<span class="line"><span>1）全局（针对所有用户生效）</span></span>
<span class="line"><span>vim /etc/bashrc</span></span>
<span class="line"><span>alias grep=&#39;grep --color=auto&#39;</span></span>
<span class="line"><span>source /etc/bashrc</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2）局部（针对具体的某个用户）</span></span>
<span class="line"><span>vim ~/.bashrc</span></span>
<span class="line"><span>alias grep=&#39;grep --color=auto&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>注意：如果希望你对环境变量的设置立刻生效，可以使用以下命令而不需要重启计算机</span></span>
<span class="line"><span>source ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、cut数据截取" tabindex="-1"><a class="header-anchor" href="#_2、cut数据截取"><span>2、cut数据截取</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cut用于列截取</span></span>
<span class="line"><span>-c: 以字符为单位进行分割。</span></span>
<span class="line"><span>-d: 自定义分隔符，默认为制表符。\\t</span></span>
<span class="line"><span>-f: 与-d一起使用，指定显示哪个区域。</span></span>
<span class="line"><span></span></span>
<span class="line"><span># cut -d: -f1 1.txt 以:冒号分割，截取第1列内容</span></span>
<span class="line"><span># cut -d: -f1,6,7 1.txt 以:冒号分割，截取第1,6,7列内容</span></span>
<span class="line"><span># cut -c4 1.txt 截取文件中每行第4个字符</span></span>
<span class="line"><span># cut -c1-4 1.txt 截取文件中每行的1-4个字符</span></span>
<span class="line"><span># cut -c4-10 1.txt </span></span>
<span class="line"><span># cut -c5- 1.txt 从第5个字符开始截取后面所有字符</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、tr-字符转换-替换-删除" tabindex="-1"><a class="header-anchor" href="#_3、tr-字符转换-替换-删除"><span>3、tr 字符转换：替换，删除</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>tr用来从标准输入中通过替换或删除操作进行字符转换；主要用于删除文件中控制字符或进行字符转换。</span></span>
<span class="line"><span>使用tr时要转换两个字符串：字符串1用于查询，字符串2用于处理各种转换。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>语法：</span></span>
<span class="line"><span>commands|tr  &#39;string1&#39;  &#39;string2&#39;</span></span>
<span class="line"><span>tr  &#39;string1&#39;  &#39;string2&#39; &lt; filename</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tr options &#39;string1&#39; &lt; filename</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-d 删除字符串1中所有输入字符。</span></span>
<span class="line"><span>-s 删除所有重复出现字符序列，只保留第一个；即将重复出现字符串压缩为一个字符串。</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>a-z 任意小写</span></span>
<span class="line"><span>A-Z 任意大写</span></span>
<span class="line"><span>0-9 任意数字</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[root@zutuanxue shell01]# cat 3.txt 自己创建该文件用于测试</span></span>
<span class="line"><span>ROOT:x:0:0:root:/root:/bin/bash</span></span>
<span class="line"><span>bin:x:1:1:bin:/bin:/sbin/nologin</span></span>
<span class="line"><span>daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span>
<span class="line"><span>adm:x:3:4:adm:/var/adm:/sbin/nologin</span></span>
<span class="line"><span>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span></span>
<span class="line"><span>sync:x:5:0:sync:/sbin:/bin/sync</span></span>
<span class="line"><span>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span></span>
<span class="line"><span>halt:x:7:0:halt:/sbin:/sbin/halt</span></span>
<span class="line"><span>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span></span>
<span class="line"><span>uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin</span></span>
<span class="line"><span>boss02:x:516:511::/home/boss02:/bin/bash</span></span>
<span class="line"><span>vip:x:517:517::/home/vip:/bin/bash</span></span>
<span class="line"><span>stu1:x:518:518::/home/stu1:/bin/bash</span></span>
<span class="line"><span>mailnull:x:47:47::/var/spool/mqueue:/sbin/nologin</span></span>
<span class="line"><span>smmsp:x:51:51::/var/spool/mqueue:/sbin/nologin</span></span>
<span class="line"><span>aaaaaaaaaaaaaaaaaaaa</span></span>
<span class="line"><span>bbbbbb111111122222222222233333333cccccccc</span></span>
<span class="line"><span>hello world 888</span></span>
<span class="line"><span>666</span></span>
<span class="line"><span>777</span></span>
<span class="line"><span>999</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span># tr -d &#39;[:/]&#39; &lt; 3.txt 删除文件中的:和/</span></span>
<span class="line"><span># cat 3.txt |tr -d &#39;[:/]&#39; 删除文件中的:和/</span></span>
<span class="line"><span># tr &#39;[0-9]&#39; &#39;@&#39; &lt; 3.txt 将文件中的数字替换为@符号</span></span>
<span class="line"><span># tr &#39;[a-z]&#39; &#39;[A-Z]&#39; &lt; 3.txt 将文件中的小写字母替换成大写字母</span></span>
<span class="line"><span># tr -s &#39;[a-z]&#39; &lt; 3.txt 匹配小写字母并将重复的压缩为一个</span></span>
<span class="line"><span># tr -s &#39;[a-z0-9]&#39; &lt; 3.txt 匹配小写字母和数字并将重复的压缩为一个</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、sort排序" tabindex="-1"><a class="header-anchor" href="#_4、sort排序"><span>4、sort排序</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sort：将文件的每一行作为一个单位，从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>语法：</span></span>
<span class="line"><span>sort [options] [filename]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-u ：去除重复行</span></span>
<span class="line"><span>-r ：降序排列，默认是升序</span></span>
<span class="line"><span>-o : 将排序结果输出到文件中  类似 重定向符号 &gt;</span></span>
<span class="line"><span>-n ：以数字排序，默认是按字符排序</span></span>
<span class="line"><span>-t ：分隔符</span></span>
<span class="line"><span>-k ：第N列</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-b ：忽略前导空格。</span></span>
<span class="line"><span>-R ：随机排序，每次运行的结果均不同。</span></span>
<span class="line"><span> </span></span>
<span class="line"><span> 示例：</span></span>
<span class="line"><span># sort -n -t: -k3 1.txt 按照用户的uid进行升序排列</span></span>
<span class="line"><span># sort -nr -t: -k3 1.txt 按照用户的uid进行降序排列</span></span>
<span class="line"><span># sort -n 2.txt 按照数字排序</span></span>
<span class="line"><span># sort -nu 2.txt 按照数字排序并且去重</span></span>
<span class="line"><span># sort -nr 2.txt </span></span>
<span class="line"><span># sort -nru 2.txt </span></span>
<span class="line"><span># sort -nru 2.txt </span></span>
<span class="line"><span># sort -n 2.txt -o 3.txt 按照数字排序并将结果重定向到文件</span></span>
<span class="line"><span># sort -R 2.txt </span></span>
<span class="line"><span># sort -u 2.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、uniq-去除连续的重复行" tabindex="-1"><a class="header-anchor" href="#_5、uniq-去除连续的重复行"><span>5、uniq 去除连续的重复行</span></a></h3><p><strong>应用技巧：去重前先使用sort排序</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>uniq：去除连续重复行</span></span>
<span class="line"><span></span></span>
<span class="line"><span>语法：</span></span>
<span class="line"><span>uniq [options] [filename]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-i: 忽略大小写</span></span>
<span class="line"><span>-c: 统计重复行次数</span></span>
<span class="line"><span>-d:只显示重复行</span></span>
<span class="line"><span></span></span>
<span class="line"><span># uniq 2.txt </span></span>
<span class="line"><span># uniq -d 2.txt </span></span>
<span class="line"><span># uniq -dc 2.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、tee-双向输出" tabindex="-1"><a class="header-anchor" href="#_6、tee-双向输出"><span>6、tee 双向输出</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>tee工具从标准输入读取并写入标准输出和文件，即：双向覆盖重定向&lt;屏幕输出|文本输入&gt;</span></span>
<span class="line"><span>somecommand |tee filename</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-a 双向追加重定向</span></span>
<span class="line"><span></span></span>
<span class="line"><span># echo hello world</span></span>
<span class="line"><span># echo hello world|tee file1</span></span>
<span class="line"><span># cat file1 </span></span>
<span class="line"><span># echo 999|tee -a file1</span></span>
<span class="line"><span># cat file1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7、paste" tabindex="-1"><a class="header-anchor" href="#_7、paste"><span>7、paste</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>paste工具用于合并文件行输出到屏幕，不会改动源文件</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-d：自定义间隔符，默认是tab,只接受一个字符</span></span>
<span class="line"><span>-s：将每个文件中的所有内容按照一行输出，文件中的行与行以TAB间隔。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[root@zutuanxue shell01]# cat a.txt </span></span>
<span class="line"><span>hello</span></span>
<span class="line"><span>[root@zutuanxue  shell01]# cat b.txt </span></span>
<span class="line"><span>hello world</span></span>
<span class="line"><span>888</span></span>
<span class="line"><span>999</span></span>
<span class="line"><span>[root@zutuanxue  shell01]# paste a.txt b.txt </span></span>
<span class="line"><span>hello   hello world</span></span>
<span class="line"><span>        888</span></span>
<span class="line"><span>        999</span></span>
<span class="line"><span>[root@zutuanxue  shell01]# paste b.txt a.txt   </span></span>
<span class="line"><span>hello world     hello</span></span>
<span class="line"><span>888</span></span>
<span class="line"><span>999</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[root@zutuanxue shell01]# paste -d&#39;@&#39; b.txt a.txt </span></span>
<span class="line"><span>hello world@hello</span></span>
<span class="line"><span>888@</span></span>
<span class="line"><span>999@</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[root@zutuanxue shell01]# paste -s b.txt a.txt </span></span>
<span class="line"><span>hello world     888     999</span></span>
<span class="line"><span>hello</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8、xargs-上一个命令的输出作为下一个命令的命令行参数" tabindex="-1"><a class="header-anchor" href="#_8、xargs-上一个命令的输出作为下一个命令的命令行参数"><span>8、xargs 上一个命令的输出作为下一个命令的命令行参数</span></a></h3><p>管道(|):上一个命令的输出作为下一个命令的输入，做的是<strong>数据源</strong>。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[root@manage01 ~]# sort -n 2.txt |uniq </span></span>
<span class="line"><span>1</span></span>
<span class="line"><span>2</span></span>
<span class="line"><span>3</span></span>
<span class="line"><span>5</span></span>
<span class="line"><span>6</span></span>
<span class="line"><span>10</span></span>
<span class="line"><span>99</span></span>
<span class="line"><span>9999</span></span>
<span class="line"><span></span></span>
<span class="line"><span>如何将上一个命令的输出，作为下一个命令的参数呢？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>xargs 上一个命令的输出作为下一个命令的命令行参数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>回顾:</span></span>
<span class="line"><span>linux 命令格式</span></span>
<span class="line"><span>命令   命令选项   参数</span></span>
<span class="line"><span>ls -l /</span></span>
<span class="line"><span>========================</span></span>
<span class="line"><span>xargs 可以将管道或标准输入（stdin）数据转换成命令行参数，也能够从文件的输出中读取数据。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>xargs 一般是和管道一起使用。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>命令格式：</span></span>
<span class="line"><span>&#39;&#39;[somecommand]|[filename]&#39;&#39; |xargs -item  command</span></span>
<span class="line"><span></span></span>
<span class="line"><span>OPTIONS:</span></span>
<span class="line"><span>-a file 从文件中读入作为sdtin</span></span>
<span class="line"><span>-E flag flag必须是一个以空格分隔的标志，当xargs分析到含有flag这个标志的时候就停止。</span></span>
<span class="line"><span>-p 当每次执行一个argument的时候询问一次用户。</span></span>
<span class="line"><span>-n num 后面加次数，表示命令在执行的时候一次用的argument的个数，默认是用所有的。</span></span>
<span class="line"><span>-t 表示先打印命令，然后再执行。</span></span>
<span class="line"><span>-i 或者是-I，这得看linux支持了，将xargs的每项名称，一般是一行一行赋值给 {}，可以用 {} 代替。</span></span>
<span class="line"><span>-r no-run-if-empty 当xargs的输入为空的时候则停止xargs，不用再去执行了。</span></span>
<span class="line"><span>-d delim 分隔符，默认的xargs分隔符是回车，argument的分隔符是空格，这里修改的是xargs的分隔符。</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>注意：linux命令格式一般为</span></span>
<span class="line"><span>命令    命令选项     参数</span></span>
<span class="line"><span>上一个命令的输出就是下一个命令的参数  这句话结合命令语法  应该知道输出的内容在下一个命令的位置了吧。</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>案例</span></span>
<span class="line"><span>[root@zutuanxue  ~]# find / -name zutuanxue |xargs gzip </span></span>
<span class="line"><span>[root@zutuanxue  ~]# cat 1</span></span>
<span class="line"><span>1</span></span>
<span class="line"><span>2</span></span>
<span class="line"><span>3</span></span>
<span class="line"><span>4</span></span>
<span class="line"><span>5</span></span>
<span class="line"><span>6</span></span>
<span class="line"><span>7</span></span>
<span class="line"><span>8</span></span>
<span class="line"><span>9</span></span>
<span class="line"><span>10</span></span>
<span class="line"><span>[root@zutuanxue  ~]# xargs -a 1 </span></span>
<span class="line"><span>1 2 3 4 5 6 7 8 9 10</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[root@zutuanxue  ~]# xargs -a 1 -E 5 </span></span>
<span class="line"><span>1 2 3 4</span></span>
<span class="line"><span></span></span>
<span class="line"><span>这样就明白使用xargs -a 为什么读取文件的时候会把文件中的所有内容都输出了吧</span></span>
<span class="line"><span>[root@zutuanxue  ~]# xargs -a 1 -p</span></span>
<span class="line"><span>echo 1 2 3 4 5 6 7 8 9 10 ?...y</span></span>
<span class="line"><span>1 2 3 4 5 6 7 8 9 10</span></span>
<span class="line"><span>[root@zutuanxue  ~]# xargs -a 1 -p</span></span>
<span class="line"><span>echo 1 2 3 4 5 6 7 8 9 10 ?...n</span></span>
<span class="line"><span></span></span>
<span class="line"><span>同理为什么把文件中的所有行按一行输出呢，原因就是默认输出所有</span></span>
<span class="line"><span>[root@zutuanxue  ~]# xargs -a 1 -n3</span></span>
<span class="line"><span>1 2 3</span></span>
<span class="line"><span>4 5 6</span></span>
<span class="line"><span>7 8 9</span></span>
<span class="line"><span>10</span></span>
<span class="line"><span>[root@zutuanxue  ~]# xargs -a 1 -n3 -p</span></span>
<span class="line"><span>echo 1 2 3 ?...y</span></span>
<span class="line"><span>echo 4 5 6 ?...1 2 3</span></span>
<span class="line"><span>y</span></span>
<span class="line"><span>echo 7 8 9 ?...4 5 6</span></span>
<span class="line"><span>y</span></span>
<span class="line"><span>echo 10 ?...7 8 9</span></span>
<span class="line"><span>y</span></span>
<span class="line"><span>10</span></span>
<span class="line"><span></span></span>
<span class="line"><span>和-p命令选项一样，显示他是怎么执行的，只不过这个不需要确认。</span></span>
<span class="line"><span>[root@zutuanxue  ~]# cat 1 |xargs -t</span></span>
<span class="line"><span>echo 1 2 3 4 5 6 7 8 9 10 </span></span>
<span class="line"><span>1 2 3 4 5 6 7 8 9 10</span></span>
<span class="line"><span></span></span>
<span class="line"><span>为何读入文件会把所有行都放在一行呢？这个和xargs的列分割符有关系</span></span>
<span class="line"><span>默认是回车</span></span>
<span class="line"><span>我们可以使用-d 改掉默认列与列的默认分割符为其他，自然就会换行了</span></span>
<span class="line"><span>[root@zutuanxue  ~]# xargs -a 1 -d &quot;@&quot;</span></span>
<span class="line"><span>1</span></span>
<span class="line"><span>2</span></span>
<span class="line"><span>3</span></span>
<span class="line"><span>4</span></span>
<span class="line"><span>5</span></span>
<span class="line"><span>6</span></span>
<span class="line"><span>7</span></span>
<span class="line"><span>8</span></span>
<span class="line"><span>9</span></span>
<span class="line"><span>10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9、shell字符" tabindex="-1"><a class="header-anchor" href="#_9、shell字符"><span>9、shell字符</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>有基础的同学不要和正则表达式中的符号含义搞混淆了。    </span></span>
<span class="line"><span>    !:                执行历史命令   !! 执行上一条命令</span></span>
<span class="line"><span>    $:                变量中取内容符</span></span>
<span class="line"><span>    + - * / %:        对应数学运算  加 减 乘 除 取余数  </span></span>
<span class="line"><span>    &amp;:                后台执行</span></span>
<span class="line"><span>    ;：               分号可以在shell中一行执行多个命令，命令之间用分号分割    </span></span>
<span class="line"><span>    \\:                转义字符</span></span>
<span class="line"><span>    \`\`:               反引号 命令中执行命令    echo &quot;today is \`date +%F\`&quot;</span></span>
<span class="line"><span>    &#39; &#39;:              单引号，脚本中字符串要用单引号引起来，但是不同于双引号的是，单引号不解释变量</span></span>
<span class="line"><span>    &quot; &quot;:              双引号，脚本中出现的字符串可以用双引号引起来</span></span>
<span class="line"><span></span></span>
<span class="line"><span>通配符    </span></span>
<span class="line"><span>    ~:                家目录    # cd ~ 代表进入用户家目录</span></span>
<span class="line"><span>    *:                星号是shell中的通配符  匹配所有</span></span>
<span class="line"><span>    ?:                问号是shell中的通配符  匹配除回车以外的一个字符</span></span>
<span class="line"><span>    [list]: 匹配[list]中的任意单个字符</span></span>
<span class="line"><span>[!list]: 匹配除list中的任意单个字符</span></span>
<span class="line"><span>{string1,string2,...}： 匹配string1,string2或更多字符串</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>重定向</span></span>
<span class="line"><span>&gt;      覆盖输入 </span></span>
<span class="line"><span>&gt;&gt; 追加输入</span></span>
<span class="line"><span>&lt; 输出</span></span>
<span class="line"><span>&lt;&lt; 追加输出</span></span>
<span class="line"><span></span></span>
<span class="line"><span>管道命令</span></span>
<span class="line"><span>|：               管道符 上一个命令的输出作为下一个命令的输入   cat filename | grep &quot;abc&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10、组合命令实战" tabindex="-1"><a class="header-anchor" href="#_10、组合命令实战"><span>10、组合命令实战</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>job1: 检索本机的IP、NETMASK、MAC地址、广播地址</span></span>
<span class="line"><span>IP:  172.20.10.3</span></span>
<span class="line"><span>NetMask:  255.255.255.240</span></span>
<span class="line"><span>Broadcast:  172.20.10.15</span></span>
<span class="line"><span>MAC Address:  00:0c:29:8d:49:ea</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>job2: 将系统中所有普通用户的用户名、密码和默认shell保存到一个文件中，要求用户名密码和默认shell之间用tab键分割</span></span>
<span class="line"><span>ayitula x /bin/bash</span></span>
<span class="line"><span></span></span>
<span class="line"><span>组合命令实战代码</span></span>
<span class="line"><span></span></span>
<span class="line"><span>job1: 检索本机的IP、NETMASK、MAC地址、广播地址</span></span>
<span class="line"><span>[root@zutuanxue  ~]# ifconfig ens33   检索网卡信息</span></span>
<span class="line"><span>[root@zutuanxue  ~]# ifconfig ens33|grep -w inet|tr -d &#39;[a-zA-Z]&#39;|tr -s &quot; &quot;  处理检索行</span></span>
<span class="line"><span></span></span>
<span class="line"><span>IP地址</span></span>
<span class="line"><span>[root@zutuanxue  ~]# ifconfig ens33|grep -w inet|tr -d [a-zA-Z]|tr -s &quot; &quot;|cut -d &quot; &quot; -f2|xargs echo &quot;IP: &quot;</span></span>
<span class="line"><span>IP:  172.20.10.3</span></span>
<span class="line"><span></span></span>
<span class="line"><span>NetMask地址</span></span>
<span class="line"><span>[root@zutuanxue  ~]# ifconfig ens33|grep -w inet|tr -d [a-zA-Z]|tr -s &quot; &quot;|cut -d &quot; &quot; -f3|xargs echo &quot;NetMask: &quot;</span></span>
<span class="line"><span>NetMask:  255.255.255.240</span></span>
<span class="line"><span></span></span>
<span class="line"><span>广播地址</span></span>
<span class="line"><span>[root@zutuanxue  ~]# ifconfig ens33|grep -w inet|tr -d [a-zA-Z]|tr -s &quot; &quot;|cut -d &quot; &quot; -f4|xargs echo &quot;Broadcast: &quot;</span></span>
<span class="line"><span>Broadcast:  172.20.10.15</span></span>
<span class="line"><span></span></span>
<span class="line"><span>MAC地址</span></span>
<span class="line"><span>[root@zutuanxue  ~]# ifconfig ens33|grep -w ether|tr -s &quot; &quot;|cut -d &quot; &quot; -f3|xargs echo &quot;MAC Address: &quot;</span></span>
<span class="line"><span>MAC Address:  00:0c:29:8d:49:ea</span></span>
<span class="line"><span></span></span>
<span class="line"><span>job2: 将系统中所有普通用户的用户名、密码和默认shell保存到一个文件中，要求用户名密码和默认shell之间用tab键分割</span></span>
<span class="line"><span>[root@zutuanxue  ~]# cut -d &quot;:&quot; -f1,2,7 /etc/passwd|tr &quot;:&quot; &quot;\\t&quot;|grep -i &quot;bash&quot;|grep -v &quot;root&quot;</span></span>
<span class="line"><span>ayitula x /bin/bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27),p=[e];function d(c,r){return a(),n("div",null,p)}const u=s(l,[["render",d],["__file","shell脚本中常用命令复习.html.vue"]]),b=JSON.parse('{"path":"/demo/back-ends/Linux/Shell%E8%84%9A%E6%9C%AC/shell%E8%84%9A%E6%9C%AC%E4%B8%AD%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%8D%E4%B9%A0.html","title":"shell脚本中常用命令复习","lang":"en-US","frontmatter":{"title":"shell脚本中常用命令复习","icon":"code","category":"shell","order":2,"description":"shell脚本可以让降低大家的工作强度，提升大家的管理能力和薪资报酬，还可以让大家有时间学习提升自己，更能让你有时间喝茶撩妹子。所以，学好shell那就是非常必要的啦，那么在学习shell之前我们得热热身，做一下准备工作了。 so！想学好shell脚本首先要考核一下自己的linux命令学的是否扎实，接下来为了能让大家学习shell更加顺畅，我把常用的一...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/demo/back-ends/Linux/Shell%E8%84%9A%E6%9C%AC/shell%E8%84%9A%E6%9C%AC%E4%B8%AD%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%A4%8D%E4%B9%A0.html"}],["meta",{"property":"og:site_name","content":"Utopia"}],["meta",{"property":"og:title","content":"shell脚本中常用命令复习"}],["meta",{"property":"og:description","content":"shell脚本可以让降低大家的工作强度，提升大家的管理能力和薪资报酬，还可以让大家有时间学习提升自己，更能让你有时间喝茶撩妹子。所以，学好shell那就是非常必要的啦，那么在学习shell之前我们得热热身，做一下准备工作了。 so！想学好shell脚本首先要考核一下自己的linux命令学的是否扎实，接下来为了能让大家学习shell更加顺畅，我把常用的一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-21T02:46:20.000Z"}],["meta",{"property":"article:author","content":"GXL"}],["meta",{"property":"article:modified_time","content":"2024-09-21T02:46:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"shell脚本中常用命令复习\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-21T02:46:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GXL\\",\\"url\\":\\"https://www.cnblogs.com/feel-myself\\",\\"email\\":\\"gaoxiaoliang123@126.com\\"}]}"]]},"headers":[{"level":2,"title":"一、 数据处理命令","slug":"一、-数据处理命令","link":"#一、-数据处理命令","children":[{"level":3,"title":"1、grep: 负责从数据源中检索对应的字符串，行过滤。","slug":"_1、grep-负责从数据源中检索对应的字符串-行过滤。","link":"#_1、grep-负责从数据源中检索对应的字符串-行过滤。","children":[]},{"level":3,"title":"2、cut数据截取","slug":"_2、cut数据截取","link":"#_2、cut数据截取","children":[]},{"level":3,"title":"3、tr 字符转换：替换，删除","slug":"_3、tr-字符转换-替换-删除","link":"#_3、tr-字符转换-替换-删除","children":[]},{"level":3,"title":"4、sort排序","slug":"_4、sort排序","link":"#_4、sort排序","children":[]},{"level":3,"title":"5、uniq 去除连续的重复行","slug":"_5、uniq-去除连续的重复行","link":"#_5、uniq-去除连续的重复行","children":[]},{"level":3,"title":"6、tee 双向输出","slug":"_6、tee-双向输出","link":"#_6、tee-双向输出","children":[]},{"level":3,"title":"7、paste","slug":"_7、paste","link":"#_7、paste","children":[]},{"level":3,"title":"8、xargs 上一个命令的输出作为下一个命令的命令行参数","slug":"_8、xargs-上一个命令的输出作为下一个命令的命令行参数","link":"#_8、xargs-上一个命令的输出作为下一个命令的命令行参数","children":[]},{"level":3,"title":"9、shell字符","slug":"_9、shell字符","link":"#_9、shell字符","children":[]},{"level":3,"title":"10、组合命令实战","slug":"_10、组合命令实战","link":"#_10、组合命令实战","children":[]}]}],"git":{"createdTime":1726886780000,"updatedTime":1726886780000,"contributors":[{"name":"udo-bit","email":"enote_gxl@163.com","commits":1}]},"readingTime":{"minutes":11.01,"words":3303},"filePathRelative":"demo/back-ends/Linux/Shell脚本/shell脚本中常用命令复习.md","localizedDate":"September 21, 2024","excerpt":"<p>shell脚本可以让降低大家的工作强度，提升大家的管理能力和薪资报酬，还可以让大家有时间学习提升自己，更能让你有时间喝茶撩妹子。所以，学好shell那就是非常必要的啦，那么在学习shell之前我们得热热身，做一下准备工作了。</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>学习之前首先要弄清什么是shell脚本：</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>\\tshell脚本本质上就是要将完成一件事情的所有命令按照执行的先后顺序写入一个文件，并给予文件执行权限</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{u as comp,b as data};
