import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,d as n}from"./app-Dd2MQ5MX.js";const l="/assets/cmake-install-0WMjyzAW.png",e={},t=n('<p>[TOC]</p><h1 id="预备知识" tabindex="-1"><a class="header-anchor" href="#预备知识"><span>预备知识</span></a></h1><h2 id="cmake是什么" tabindex="-1"><a class="header-anchor" href="#cmake是什么"><span>CMake是什么</span></a></h2><p>CMake是一个管理代码构建的工具。与平台和构建系统无关。最初CMake只用于生成不同版本的Makefile。现在CMake可以生成不同构建工具构建文件，也可以生成不同IDE（如Visual Studio、XCode）的项目文件。</p><p>CMake也可以在一定程度上简化C/C++第三方库的引入与使用流程。</p><p>CMake主要用于构建C或C++程序，但是也可以用于其他语言程序的构建。</p><p>**** </p><h2 id="环境搭建与学习准备" tabindex="-1"><a class="header-anchor" href="#环境搭建与学习准备"><span>环境搭建与学习准备</span></a></h2><h2 id="前置条件" tabindex="-1"><a class="header-anchor" href="#前置条件"><span>前置条件</span></a></h2><p>如果是用Linux学习，需要先安装GCC、make等工具。Ubuntu上安装命令如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gcc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> g++</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><p>如果是用Windows，需要先装有编译工具。建议安装MinGW环境进行学习（用Visual Studio也可以，但是用来学习cmake的话感觉有点笨重），本课程用的编译工具是MinGW，能和课程工具保持一致最好。</p><p>MinGW常用有以下两个版本，选择其中一个即可。<strong>w64devkit提供的工具更多，操作更接近Linux</strong>。所以推荐用w64devkit。</p><p>w64devkit：https://github.com/skeeto/w64devkit/releases</p><p>mingw-builds：https://github.com/niXman/mingw-builds-binaries/releases</p><blockquote><p>最好会GCC与Make的基本用法。但不会也没关系，影响不大。</p></blockquote><p> </p><h3 id="ubuntu安装cmake" tabindex="-1"><a class="header-anchor" href="#ubuntu安装cmake"><span>Ubuntu安装CMake</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><h3 id="windows安装cmake" tabindex="-1"><a class="header-anchor" href="#windows安装cmake"><span>Windows安装CMake</span></a></h3><p>cmake官网：https://cmake.org/</p><p>下载安装包，直接下载msi版本。安装时将添加到系统环境变量勾选。</p><figure><img src="'+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>安装完成之后测试</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><p> </p><h3 id="学习材料" tabindex="-1"><a class="header-anchor" href="#学习材料"><span>学习材料</span></a></h3><p>1、官方文档：https://cmake.org/cmake/help/latest/</p><p>2、tutorial代码：https://cmake.org/cmake/help/latest/_downloads/987664e19bf1c78e58910f17f64df29f/cmake-3.26.4-tutorial-source.zip</p><p> </p><p> </p><h1 id="cmake-tutorial" tabindex="-1"><a class="header-anchor" href="#cmake-tutorial"><span>CMake Tutorial</span></a></h1><h2 id="第一步-起点" tabindex="-1"><a class="header-anchor" href="#第一步-起点"><span>第一步 起点</span></a></h2><h3 id="练习1-最简单的cmake项目" tabindex="-1"><a class="header-anchor" href="#练习1-最简单的cmake项目"><span>练习1 最简单的CMake项目</span></a></h3><p><strong><code>CMakeLists.txt</code></strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 1: 设置CMake最低版本要求为 3.10</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 2: 创建一个名为Tutorial的项目</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 3: 为项目添加一个叫做 Tutorial 的可执行文件</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: 一定要指定源文件 tutorial.cxx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>cmake_minimum_required</mark></p><p>用于指定所需cmake最低版本</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION &lt;版本号&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果当前使用的cmake版本低于所指定的版本，则会报错并且终止执行。</p><p>②<mark>project</mark></p><p>指定项目名称</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;项目名&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例 指定项目名称为Tutorial</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>③<mark>add_executable</mark></p><p>利用指定的源文件在项目中添加可执行文件</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法 源文件可以有多个，用空格隔开</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;可执行文件名&gt; &lt;源文件列表&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例 可执行文件名为Tutorial，用到的源文件为tutorial.cxx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>④<mark>cmake命令常用执行方法</mark></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">生成器名</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">称&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">CMakeLists.txt所在的目</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">录&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果使用默认生成器，则-G这部分可以省略，具体支持哪些生成器可以用cmake --help查看</p><blockquote><p>扩展：设置环境变量CMAKE_GENERATOR可以指定默认生成器，简化cmake命令的执行</p></blockquote><p> </p><p><strong>课后练习</strong></p><ol><li>自行准备一个或多个源文件，多练习几遍cmake项目的创建与生成可执行文件流程，直到能默写出CMakeLists.txt中的内容并且熟练通过cmake构建出可执行文件。</li><li>配置CMAKE_GENERATOR环境变量并修改不同值，通过cmake --help命令查看该变量对默认Generator(生成器)的影响。</li><li>如果电脑上有多套环境或工具（例如有MinGW与Visual Studio或CodeBlocks），修改-G指定不同生成器，尝试生成不同工具对应的项目。</li></ol><p> </p><p> </p><h3 id="练习2-指定c-标准" tabindex="-1"><a class="header-anchor" href="#练习2-指定c-标准"><span>练习2 指定C++标准</span></a></h3><p><strong><code>CMakeLists.txt</code></strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 1: 设置CMake最低版本要求为 3.10</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 2: 创建一个名为Tutorial的项目</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 7: 用上面project命令将项目版本设为 1.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 6: 设置变量 CMAKE_CXX_STANDARD 为 11</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#          CMAKE_CXX_STANDARD_REQUIRED 为 True</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 26)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 8: 用 configure_file 复制 TutorialConfig.h.in 生成</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#         TutorialConfig.h</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 3: 为项目添加一个叫做 Tutorial 的可执行文件</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: 一定要指定源文件 tutorial.cxx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>set</mark></p><p>用于给变量设置值</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;变量名&gt; &lt;变量值&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 26)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(SRC_DIR /home/src)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>②<mark>CMAKE_CXX_STANDARD</mark></p><p>变量，用于指定C++标准</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法 截止2023/6 std_num∈{98,11,14,17,20,23,26}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD &lt;std_num&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 11)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 17)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在C++中可以通过输出__cplusplus查看当前编译器所用的标准</p><table><thead><tr><th style="text-align:center;">__cplusplus的值</th><th style="text-align:center;">对应的C++标准</th></tr></thead><tbody><tr><td style="text-align:center;">199711</td><td style="text-align:center;">C++98</td></tr><tr><td style="text-align:center;">201103</td><td style="text-align:center;">C++11</td></tr><tr><td style="text-align:center;">201402</td><td style="text-align:center;">C++14</td></tr><tr><td style="text-align:center;">201703</td><td style="text-align:center;">C++17</td></tr><tr><td style="text-align:center;">202002</td><td style="text-align:center;">C++20</td></tr><tr><td style="text-align:center;">202100</td><td style="text-align:center;">C++23</td></tr></tbody></table></blockquote><p>③<mark>CMAKE_CXX_STANDARD_REQUIRED</mark></p><p>变量，如果设置为True，则通过CMAKE_CXX_STANDARD设置的C++标准是必需的，如果编译器不支持该标准则会输出错误提示信息。如果不设置或者设置为False，则CMAKE_CXX_STANDARD设置的C++标准不是必需的，如果编译器不支持对应的标准，则会使用上一个版本的标准进行编译。</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><p> </p><p><strong>课后练习</strong></p><ol><li>在std_num∈{98,11,14,17,20,23,26}的范围内设置C++标准，输出__cplusplus的值并观察规律。</li><li>设置std_num∉{98,11,14,17,20,23,26}的C++标准值，观察cmake提示信息并输出__cplusplus的值，总结其规律。</li><li>类比C++标准的指定，查询文档或其他资料，补充C语言标准指定方式，并准备几个C语言源文件进行实验。</li></ol><p> </p><p> </p><p> </p><h3 id="练习3-添加版本号和配置头文件" tabindex="-1"><a class="header-anchor" href="#练习3-添加版本号和配置头文件"><span>练习3 添加版本号和配置头文件</span></a></h3><p>有些时候需要让源代码能访问CMakeLIsts.txt当中的数据，比如说在CMakeLists.txt中定义版本号之后，希望能在源程序中对版本号进行输出。本节内容为如何让源代码中能访问CMakeLists.txt中的变量数据。</p><p><code>CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 1: 设置CMake最低版本要求为 3.10</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 2: 创建一个名为Tutorial的项目</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial VERSION 11.25)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 7: 用上面project命令将项目版本设为 1.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 6: 设置变量 CMAKE_CXX_STANDARD 为 11</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#          CMAKE_CXX_STANDARD_REQUIRED 为 True</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 11)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># set(STR_TEST &quot;Hello World&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 8: 用 configure_file 复制 TutorialConfig.h.in 生成</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#         TutorialConfig.h</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TutorialConfig.h.in TutorialConfig.h)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 3: 为项目添加一个叫做 Tutorial 的可执行文件</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: 一定要指定源文件 tutorial.cxx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 9: 用 target_include_directories 添加头文件搜索目录 \${PROJECT_BINARY_DIR}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># PUBLIC PRIVATE INTERFACE</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${PROJECT_BINARY_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>TutorialConfig.h.in</code></p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Tutorial_VERSION_MAJOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @Tutorial_VERSION_MAJOR@</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Tutorial_VERSION_MINOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @Tutorial_VERSION_MINOR@</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>〇<mark>project第二种用法</mark></p><p>定义项目名和版本号</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial VERSION 2.15)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>①<mark>configure_file</mark></p><p>将输入文件复制为输出文件，并把其中的变量引用替换为CMakeLists.txt中定义的变量，如果变量未定义，则替换为空串。输入文件中的变量引用方式为** @@变量名@@<strong>或者</strong>\${变量名}**。</p><p>输入文件默认路径为CMakeLists.txt所在的路径，输出文件的路径默认为cmake生成文件所在的路径。</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;inputfile&gt; &lt;outputfile&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TutorialConfig.h.in TutorialConfig.h)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在输入文件中，用宏定义的方式对变量进行定义</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Tutorial_VERSION_MAJOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> @Tutorial_VERSION_MAJOR@</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Tutorial_VERSION_MINOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> \${Tutorial_VERSION_MINOR}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 因为CMakeLists.txt中定义的字符串都是裸的，所以如果一个变量的值为字符串，需要用双引号包起来</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> STR_VAR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;@STR_VAR@&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述定义中@Tutorial_VERSION_MAJOR@、\${Tutorial_VERSION_MINOR}、@STR_VAR@在输出文件中会被替换为CMakeLists.txt中定义的对应变量值。</p><p> </p><p>②<mark>target_include_directories</mark></p><p>给指定的目标添加头文件搜索路径。</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; &lt;INTERFACE|PUBLIC|PRIVATE&gt; &lt;dir1 dir2 ...&gt;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${PROJECT_BINARY_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p>③<code>&lt;mark&gt;&lt;PROJECT-NAME&gt;_VERSION_MAJOR&lt;/mark&gt;</code></p><p>版本号第一个组成部分。该变量为cmake自动定义的一个变量，不需要手动定义，值来自于project的定义。其中<code>&lt;PROJECT-NAME&gt;</code>为用* *project**定义的项目名。</p><p> </p><p>④<code>&lt;mark&gt;&lt;PROJECT-NAME&gt;_VERSION_MINOR&lt;/mark&gt;</code></p><p>版本号第二个组成部分。该变量为cmake自动定义的一个变量，不需要手动定义，值来自于project的定义。其中<code>&lt;PROJECT-NAME&gt;</code>为用* *project**定义的项目名。</p><p> </p><p> </p><p><strong>课后练习</strong></p><p>①通过本节学习的内容访问更多CMakeLists.txt中的变量。</p><p>②自行探究一下<code>include_directories</code>的用法，比较与target_include_directories的异同。</p><p> </p><p> </p><p> </p><h2 id="第二步-加个库" tabindex="-1"><a class="header-anchor" href="#第二步-加个库"><span>第二步 加个库</span></a></h2><h3 id="练习1-创建库文件" tabindex="-1"><a class="header-anchor" href="#练习1-创建库文件"><span>练习1 创建库文件</span></a></h3><p>前面的练习当中创建了可执行文件。本节将学习如何创建库文件以及库文件的使用 。同时也将练习将一个项目划分为多个子目录的方法。</p><p><code>CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># set the project name and version</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial VERSION 1.0)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># specify the C++ standard</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 11)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 7: Create a variable USE_MYMATH using option and set default to ON</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># configure a header file to pass some of the CMake settings</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to the source code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TutorialConfig.h.in TutorialConfig.h)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 8: Use list() and APPEND to create a list of optional libraries</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># called  EXTRA_LIBS and a list of optional include directories called</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># EXTRA_INCLUDES. Add the MathFunctions library and source directory to</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># the appropriate lists.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Only call add_subdirectory and only add MathFunctions specific values</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to EXTRA_LIBS and EXTRA_INCLUDES if USE_MYMATH is true.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 2: Use add_subdirectory() to add MathFunctions to this project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the executable</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 9: Use EXTRA_LIBS instead of the MathFunctions specific values</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># in target_link_libraries.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 3: Use target_link_libraries to link the library to our executable</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC MathFunctions)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 4: Add MathFunctions to Tutorial&#39;s target_include_directories()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: \${PROJECT_SOURCE_DIR} is a path to the project source. AKA This folder!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 10: Use EXTRA_INCLUDES instead of the MathFunctions specific values</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># in target_include_directories.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the binary tree to the search path for include files</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># so that we will find TutorialConfig.h</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                           &quot;\${PROJECT_BINARY_DIR}&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                           &quot;\${PROJECT_SOURCE_DIR}/MathFunctions&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 1: Add a library called MathFunctions</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: You will need the add_library command</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions mysqrt.cxx)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>add_subdirectory</mark></p><p>为当前项目添加子目录。子目录当中必须包含一个CMakeLists.txt文件，其中可以不写cmake_minimum_required与project。</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;source_dir&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>②<mark>target_link_libraries</mark></p><p>为指定目录指定链接库。</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; ... &lt;item&gt;... ...)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC MathFunctions)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>③<mark>PROJECT_SOURCE_DIR</mark></p><p>最后一次调用project的CMakeLists.txt文件所在的目录。</p><p>④<mark>add_library</mark></p><p>用指定的源文件生成库文件。</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [&lt;source&gt;...])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions mysqrt.cxx MathFunctions.h)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p> </p><h3 id="练习2-库文件可选编译" tabindex="-1"><a class="header-anchor" href="#练习2-库文件可选编译"><span>练习2 库文件可选编译</span></a></h3><p>本节内容为设置库文件（子目录）可选编译。</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># set the project name and version</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial VERSION 1.0)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># specify the C++ standard</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 11)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 7: Create a variable USE_MYMATH using option and set default to ON</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Use My Math?&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> OFF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># configure a header file to pass some of the CMake settings</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to the source code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TutorialConfig.h.in TutorialConfig.h)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 8: Use list() and APPEND to create a list of optional libraries</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># called  EXTRA_LIBS and a list of optional include directories called</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># EXTRA_INCLUDES. Add the MathFunctions library and source directory to</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># the appropriate lists.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Only call add_subdirectory and only add MathFunctions specific values</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to EXTRA_LIBS and EXTRA_INCLUDES if USE_MYMATH is true.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 2: Use add_subdirectory() to add MathFunctions to this project</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND EXTRA_LIBS MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND EXTRA_INCLUDES </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${PROJECT_SOURCE_DIR}/MathFunctions&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the executable</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 9: Use EXTRA_LIBS instead of the MathFunctions specific values</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># in target_link_libraries.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 3: Use target_link_libraries to link the library to our executable</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${EXTRA_LIBS}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 4: Add MathFunctions to Tutorial&#39;s target_include_directories()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: \${PROJECT_SOURCE_DIR} is a path to the project source. AKA This folder!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 10: Use EXTRA_INCLUDES instead of the MathFunctions specific values</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># in target_include_directories.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the binary tree to the search path for include files</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># so that we will find TutorialConfig.h</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                           &quot;\${PROJECT_BINARY_DIR}&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                           &quot;\${EXTRA_INCLUDES}&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>option</mark></p><p>提供一个布尔变量，可以让用户自行选择。</p><p>用法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;help_text&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [value])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Use MyMath&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>value</code>值为<code>ON</code>或<code>OFF</code>，默认值为<code>OFF</code>。</p><p>在执行配置时，可以用<code>-D</code>来指定值，例如</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DUSE_MYMATH=OFF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>②<mark>if()</mark> &amp; <mark>endif()</mark></p><p>条件判断开始与结束。</p><p>语法：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;condition&gt;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">elseif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;condition&gt;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">&lt;condition&gt;判断为真的值</th><th style="text-align:center;">&lt;condition&gt;判断为假的值</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;">ON</td><td style="text-align:center;">OFF</td></tr><tr><td style="text-align:center;">TRUE</td><td style="text-align:center;">FALSE</td></tr><tr><td style="text-align:center;">YES</td><td style="text-align:center;">NO</td></tr><tr><td style="text-align:center;">Y</td><td style="text-align:center;">N</td></tr><tr><td style="text-align:center;">其他非0数</td><td style="text-align:center;">IGNORE</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">NOTFOUND或以-NOTFOUND结尾的</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">值不是判断为真的字符串</td></tr></tbody></table><p>③<mark>list</mark></p><p>列表操作。详细操作见<a href="#">list</a>，这里只讲用到的APPEND操作。将一些元素追加到已有的列表当中。如果列表变量还未定义，则会当做空列表处理。</p><p>语法与示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 语法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND &lt;list&gt; [&lt;element&gt; ...])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例 将MathFunctions追加到EXTRA_LIBS当中</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND EXTRA_LIBS MathFunctions)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>④<mark>cmakedefine</mark></p><p>用法与#define相同，用在configure_file的输入文件当中进行宏定义。</p><p>不同点在于，#define本身就是C/C++当中的宏定义，所以不论对应的变量是否在CMakeLists.txt中有定义，都会在输出文件中定义一个宏。而#cmakedfine则会根据变量在CMakeLists.txt中的定义情况来确定是否会在输出文件中定义宏。如果变量在CMakeLists.txt中没有定义或都已定义但是一个判断为假的布尔值，则不会在输出文件中定义对应的宏，如果变量在CMakeLists.txt中有定义且不为布尔值、或者为布尔值但判断为真，则会在输出文件中定义对应的宏。</p><p>用法示例：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">#cmakedefine USE_MYMATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><p> </p><h2 id="第三步-添加使用依赖" tabindex="-1"><a class="header-anchor" href="#第三步-添加使用依赖"><span>第三步 添加使用依赖</span></a></h2><h3 id="练习1-为库添加使用依赖" tabindex="-1"><a class="header-anchor" href="#练习1-为库添加使用依赖"><span>练习1 为库添加使用依赖</span></a></h3><p><code>CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># set the project name and version</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial VERSION 1.0)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># specify the C++ standard</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD 11)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMAKE_CXX_STANDARD_REQUIRED </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># should we use our own math functions</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Use tutorial provided math implementation&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;OUT --- \${CMAKE_CURRENT_SOURCE_DIR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># configure a header file to pass some of the CMake settings</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to the source code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TutorialConfig.h.in TutorialConfig.h)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 2: 删除EXTRA_INCLUDES</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the MathFunctions library</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND EXTRA_LIBS MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the executable</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${EXTRA_LIBS}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 3: 删除EXTRA_INCLUDES</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the binary tree to the search path for include files</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># so that we will find TutorialConfig.h</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                           &quot;\${PROJECT_BINARY_DIR}&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions mysqrt.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 1: 声明所有需要链接MathFunctions库的都要在头文件搜索中加入当前当前目录，但是MathFunctions本身不需要</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: 用target_include_directories和INTERFACE  </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># PUBLIC 本目标需要用，依赖这个目标的其他目标也需要用</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># INTERFACE  本目标不需要，依赖本目标的其他目标需要</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># PRIVATE 本目标需要，依赖这个目标的其他目标不需要</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions INTERFACE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_CURRENT_SOURCE_DIR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;MathFunction --- \${CMAKE_CURRENT_SOURCE_DIR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>PUBLIC | INTERFACE | PRIVATE</mark></p><p>在使用<code>target_include_directories</code>和<code>target_link_libraries</code>添加搜索目录时，有三个修饰符<code>PUBLIC | INTERFACE | PRIVATE</code> ，其含义如下：</p><p><strong>PUBLIC</strong>：当前目标和以当前目标为依赖的目标都能能使用添加的目录，都能在对应的目录中进行搜索</p><p><strong>PRIVATE</strong>：只有当前目标能使用添加的目录，以当前目标为依赖的目标不能使用</p><p><strong>INTERFACE</strong>：以当前目标为依赖的目标需要使用添加的目录，但当前目标不需要用这种方式添加对应搜索目录时用INTERFACE。</p><p> </p><p>②<mark>CMAKE_CURRENT_SOURCE_DIR</mark></p><p>变量。当前CMakeLists.txt所在的目录。</p><p> </p><p><strong>课后练习</strong></p><p>①找一个外部的头文件目录，分别在两个cxx文件里引用，并用本节内容方法在MathFunctions/CMakeLists.txt里添加使用依赖，分别使用PUBLIC | INTERFACE | PRIVATE修饰符，查看编译报错信息，验证本节所讲知识点。</p><p> </p><p> </p><h2 id="第四步-生成器表达式" tabindex="-1"><a class="header-anchor" href="#第四步-生成器表达式"><span>第四步 生成器表达式</span></a></h2><h3 id="练习1-用接口库设置c-标准" tabindex="-1"><a class="header-anchor" href="#练习1-用接口库设置c-标准"><span>练习1 用接口库设置C++标准</span></a></h3><p><code>CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 4: Update the minimum required version to 3.15</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># set the project name and version</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial VERSION 1.0)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 1: 将下面的代码替换为:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 创建一个interface库tutorial_compiler_flags</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#   Hint: use add_library() with the INTERFACE signature</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 添加编译特性cxx_std_11到tutorial_compiler_flags</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#   Hint: Use target_compile_features()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE cxx_std_14)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 5: 创建一些辅助变量用来确定用的是哪个编译器:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 创建一个变量gcc_like_cxx如果用的是CXX并且用的是下列任意一个编译器那么值为true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#         ARMClang, AppleClang, Clang, GNU, LCC</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 创建一个变量msvc_cxx如果用的是CXX和MSVC那么值为true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Use set() and COMPILE_LANG_AND_ID</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 6: 向interface库tutorial_compiler_flags中添加警告选项：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 如果是gcc_like_cxx, 添加 -Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 如果是msvc_cxx, 添加 -W3</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Use target_compile_options()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 7: 用嵌套生成器表达式, 只在构建的时警告</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Use BUILD_INTERFACE</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># should we use our own math functions</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Use tutorial provided math implementation&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># configure a header file to pass some of the CMake settings</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to the source code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TutorialConfig.h.in TutorialConfig.h)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the MathFunctions library</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND EXTRA_LIBS MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the executable</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 2: 链接tutorial_compiler_flags</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${EXTRA_LIBS}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tutorial_compiler_flags)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the binary tree to the search path for include files</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># so that we will find TutorialConfig.h</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                           &quot;\${PROJECT_BINARY_DIR}&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions mysqrt.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># state that anybody linking to us needs to include the current source dir</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to find MathFunctions.h, while we don&#39;t.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          INTERFACE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${CMAKE_CURRENT_SOURCE_DIR}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 3: 链接tutorial_compiler_flags</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions PUBLIC tutorial_compiler_flags)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>INTERFACE库</mark></p><p>使用<code>add_library(&lt;libname&gt; INTERFACE)</code>可以创建个Interface库，这样的库并不是真实存在的，是一个虚拟的库，通常用来传递一些选项。用法和正常的库一样，可通过 <code>target_link_libraries</code>链接到目标，可以向指定的目标传递一些指定的参数选项。</p><p> </p><p>②<mark>target_compile_features</mark></p><p><code>target_compile_features</code> 是 CMake 用来指定编译器特性的命令。它可以用来指定编译器需要支持的 C++ 标准或者其他编译器特性。具体支持的特性取决于编译器版本和 CMake 版本。</p><p>语法与示例</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; &lt;PRIVATE|PUBLIC|INTERFACE&gt; &lt;feature&gt; [...])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE cxx_std_11)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下是一些常见的特性：</p><ul><li><code>cxx_std_11</code>：指定 C++11 标准。</li><li><code>cxx_std_14</code>：指定 C++14 标准。</li><li><code>cxx_std_17</code>：指定 C++17 标准。</li><li><code>cxx_std_20</code>：指定 C++20 标准。</li><li><code>cxx_constexpr</code>：启用 C++11 constexpr 函数。</li><li><code>cxx_nullptr</code>：启用 C++11 nullptr 关键字。</li><li><code>cxx_auto_type</code>：启用 C++11 auto 关键字。</li><li><code>cxx_lambdas</code>：启用 C++11 lambda 表达式。</li><li><code>cxx_range_for</code>：启用 C++11 range-based for 循环。</li><li><code>cxx_override</code>：启用 C++11 override 关键字。</li><li><code>cxx_final</code>：启用 C++11 final 关键字。</li></ul><p> </p><h3 id="练习2-添加编译警告选项" tabindex="-1"><a class="header-anchor" href="#练习2-添加编译警告选项"><span>练习2 添加编译警告选项</span></a></h3><p><strong>CMakeLists.txt解析过程</strong></p><p>CMake构建过程分为两个阶段</p><ol><li>配置阶段，CMake 会读取项目的 CMakeLists.txt 文件，并根据其中的指令和参数来生成 Makefile 或者 IDE 的项目文件 <ul><li>检查编译器和工具链是否可用，并设置编译器选项和链接选项</li><li>检查系统库和第三方库是否可用，并设置库的路径和链接选项</li><li>检查项目的源代码文件，并设置编译选项和链接选项</li><li>生成 Makefile 或者 IDE 的项目文件</li><li>根据不同的平台和编译器生成不同的 Makefile 或者项目文件，以保证项目可以在不同的平台和编译器上构建</li></ul></li><li>生成阶段，CMake 会根据配置阶段生成的 Makefile 或者项目文件来执行实际的构建操作 <ul><li>根据 Makefile 或者项目文件中的指令和参数来编译源代码文件，并生成目标文件</li><li>根据 Makefile 或者项目文件中的指令和参数来链接目标文件，并生成可执行文件或者库文件</li></ul></li></ol><p> </p><p><strong>生成器表达式</strong></p><p>CMake生成器表达式是一种特殊的语法，用于在CMake构建系统中动态地生成构建规则。它们可以用于指定编译器选项、链接选项等。</p><p>本节先学习其中两种表达式：</p><p><strong>$&lt;condition:true_string&gt;</strong></p><ul><li>如果<code>condition</code>为1，则此表达式结果为<code>true_string</code></li><li>如果<code>condition</code>为0，则此表达式结果为空</li></ul><p><strong>$&lt;COMPILE_LANG_AND_ID:language,compiler_ids&gt;</strong></p><ul><li>如果当前所用的语言与<code>language</code>一致且编译器ID在<code>compiler_ids</code>的列表中，则表达式值为1，否则为0</li><li><code>language</code>值主要为<code>CXX</code>和<code>C</code></li><li><code>compiler_ids</code>主要有GNU、Clang、MSVC等，有多个时用逗号隔开</li></ul><p>生成器表达式因为是在生成阶段可用，所以不能在配置阶段进行输出 ，可用下面方式调式</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_custom_target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ged </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">COMMAND</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> \${CMAKE_COMMAND}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -E echo </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$&lt;1:hello&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>配置完成之后，用以下命令进行输出</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ged</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用make可简写</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ged</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但不是所有的表达式都能这样输出，有的表达式无法输出，比如<code>$&lt;COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU,LCC&gt;</code></p><p> </p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 4: Update the minimum required version to 3.15</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.15)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># set the project name and version</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial VERSION 1.0)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 1: 将下面的代码替换为:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 创建一个interface库tutorial_compiler_flags</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#   Hint: use add_library() with the INTERFACE signature</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 添加编译特性cxx_std_11到tutorial_compiler_flags</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#   Hint: Use target_compile_features()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE cxx_std_14)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add_custom_target(ged COMMAND \${CMAKE_COMMAND} -E echo &quot;$&lt;COMPILE_LANG_AND_ID:CXX,GNU&gt;&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 5: 创建一些辅助变量用来确定用的是哪个编译器:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 创建一个变量gcc_like_cxx如果用的是CXX并且用的是下列任意一个编译器那么值为true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#         ARMClang, AppleClang, Clang, GNU, LCC</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 创建一个变量msvc_cxx如果用的是CXX和MSVC那么值为true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Use set() and COMPILE_LANG_AND_ID</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(gcc_like_cxx </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$&lt;COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU,LCC&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(msvc_cxx </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$&lt;COMPILE_LANG_AND_ID:CXX,MSVC&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 6: 向interface库tutorial_compiler_flags中添加警告选项：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 如果是gcc_like_cxx, 添加 -Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * 如果是msvc_cxx, 添加 -W3</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Use target_compile_options()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;$&lt;\${gcc_like_cxx}:-Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;$&lt;\${msvc_cxx}:-W3&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 7: 用嵌套生成器表达式, 只在构建的时警告</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Use BUILD_INTERFACE</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># should we use our own math functions</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Use tutorial provided math implementation&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># configure a header file to pass some of the CMake settings</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to the source code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TutorialConfig.h.in TutorialConfig.h)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the MathFunctions library</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND EXTRA_LIBS MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the executable</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 2: 链接tutorial_compiler_flags</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${EXTRA_LIBS}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tutorial_compiler_flags)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the binary tree to the search path for include files</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># so that we will find TutorialConfig.h</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                           &quot;\${PROJECT_BINARY_DIR}&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>target_compile_options</mark></p><p>给指定的目标添加编译选项。</p><p>语法及示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [BEFORE]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;INTERFACE|PUBLIC|PRIVATE&gt; [items1...]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  [&lt;INTERFACE|PUBLIC|PRIVATE&gt; [items2...] ...])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC -std=c++11 -Wunused)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p><strong>课后练习</strong></p><p>①有余力的同学自行探究一下生成器表达式的其他内容。</p><p> </p><p> </p><h2 id="第五步-安装与测试" tabindex="-1"><a class="header-anchor" href="#第五步-安装与测试"><span>第五步 安装与测试</span></a></h2><h3 id="练习1-安装规则" tabindex="-1"><a class="header-anchor" href="#练习1-安装规则"><span>练习1 安装规则</span></a></h3><p><code>CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.15)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># set the project name and version</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial VERSION 1.0)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># specify the C++ standard</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE cxx_std_11)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add compiler warning flags just when building this project via</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># the BUILD_INTERFACE genex</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(gcc_like_cxx </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$&lt;COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU,LCC&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(msvc_cxx </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$&lt;COMPILE_LANG_AND_ID:CXX,MSVC&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;$&lt;\${gcc_like_cxx}:$&lt;BUILD_INTERFACE:-Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused&gt;&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;$&lt;\${msvc_cxx}:$&lt;BUILD_INTERFACE:-W3&gt;&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># should we use our own math functions</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Use tutorial provided math implementation&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># configure a header file to pass some of the CMake settings</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to the source code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TutorialConfig.h.in TutorialConfig.h)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the MathFunctions library</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND EXTRA_LIBS MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the executable</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${EXTRA_LIBS}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tutorial_compiler_flags)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the binary tree to the search path for include files</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># so that we will find TutorialConfig.h</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                           &quot;\${PROJECT_BINARY_DIR}&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 3: 安装 Tutorial 到 bin 目录  \${CMAKE_INSTALL_PREFIX}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Use the TARGETS and DESTINATION parameters</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># install(TARGETS targets... [DESTINATION &lt;dir&gt;])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TARGETS Tutorial DESTINATION bin)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_INSTALL_PREFIX}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 4: 安装TutorialConfig.h到include目录</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Use the FILES and DESTINATION parameters</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FILES </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${PROJECT_BINARY_DIR}/TutorialConfig.h&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> DESTINATION include)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions mysqrt.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          INTERFACE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${CMAKE_CURRENT_SOURCE_DIR}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions tutorial_compiler_flags)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(installable_libs MathFunctions tutorial_compiler_flags)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">TARGET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> SqrtLibrary)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND installable_libs SqrtLibrary)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TARGETS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${installable_libs}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> DESTINATION lib)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FILES MathFunctions.h DESTINATION include)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>if(TARGET target-name)</mark></p><ul><li>如果<code>target-name</code>是一个已经调用<code>add_executable</code>、<code>add_library</code>、<code>add_custom_target</code>创建的目标，则返回True</li></ul><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>②<mark>install</mark></p><p>用于定义安装规则。</p><p>语法与示例（简洁版）</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 安装生成的目标文件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TARGETS &lt;目标名列表&gt; DESTINATION &lt;安装位置&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 安装其他文件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FILES &lt;文件列表&gt; DESTINATION &lt;安装位置&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装多个文件时，用空格隔开。安装位置是相对于<code>CMAKE_INSTALL_PREFIX</code>的，<code>CMAKE_INSTALL_PREFIX</code>是安装时的默认路径，可以自行用 <code>set</code>设置。</p><p>运行安装：</p><p>安装到默认路径下</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果有多个生成版本，指定安装版本</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Release</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果用的是IDE，用下列命令</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Debug</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>自行指定安装路径</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --prefix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/path/to/your/installdir&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><h3 id="练习2-测试支持" tabindex="-1"><a class="header-anchor" href="#练习2-测试支持"><span>练习2 测试支持</span></a></h3><p><code>CTest</code>提供了一些测试管理。本节内容为给可执行文件创建单元测试。</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.15)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># set the project name and version</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial VERSION 1.0)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># specify the C++ standard</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE cxx_std_11)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add compiler warning flags just when building this project via</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># the BUILD_INTERFACE genex</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(gcc_like_cxx </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$&lt;COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU,LCC&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(msvc_cxx </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$&lt;COMPILE_LANG_AND_ID:CXX,MSVC&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;$&lt;\${gcc_like_cxx}:$&lt;BUILD_INTERFACE:-Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused&gt;&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;$&lt;\${msvc_cxx}:$&lt;BUILD_INTERFACE:-W3&gt;&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># should we use our own math functions</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Use tutorial provided math implementation&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># configure a header file to pass some of the CMake settings</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to the source code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TutorialConfig.h.in TutorialConfig.h)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the MathFunctions library</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND EXTRA_LIBS MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the executable</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${EXTRA_LIBS}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tutorial_compiler_flags)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the binary tree to the search path for include files</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># so that we will find TutorialConfig.h</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                           &quot;\${PROJECT_BINARY_DIR}&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 3: 安装 Tutorial 到 bin 目录  \${CMAKE_INSTALL_PREFIX}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Use the TARGETS and DESTINATION parameters</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># install(TARGETS targets... [DESTINATION &lt;dir&gt;])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># target: add_excutable add_library</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TARGETS Tutorial DESTINATION bin)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_INSTALL_PREFIX}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 4: 安装TutorialConfig.h到include目录</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Use the FILES and DESTINATION parameters</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FILES </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${PROJECT_BINARY_DIR}/TutorialConfig.h&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> DESTINATION include)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 5: Enable testing</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">enable_testing</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 6: 添加一个Runs测试，运行下面的命令:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># $ Tutorial 25</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Runs </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Tutorial 25)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 7: 添加一个叫Usage的测试，执行下面的命令:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># $ Tutorial</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 要保证输出期望的内容.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: 用PASS_REGULAR_EXPRESSION属性匹配&quot;Usage.*number&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Usage </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Tutorial)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_tests_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Usage PROPERTIES PASS_REGULAR_EXPRESSION </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Usage.*number&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 8: 再添加一个运行下面命令的测试:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># $ Tutorial 4</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 保证输出结果是正确的.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: 用PASS_REGULAR_EXPRESSION属性匹配&quot;4 is 2&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Com4 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Tutorial 4)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_tests_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Com4 PROPERTIES PASS_REGULAR_EXPRESSION </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;4 is 2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 9: 添加更多测试. 创建一个函数do_test完成重复内容</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 测试以下数值: 4, 9, 5, 7, 25, -25 and 0.0001.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(do_test num result)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  add_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Com</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${num}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Tutorial </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${num}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  set_tests_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Com</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${num}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PROPERTIES PASS_REGULAR_EXPRESSION </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${num} is \${result}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(9 3)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(5 2.236)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(7 2.645)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(-25 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;(-nan|nan|0)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># not a number</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(0.0001 0.001)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 5 2.236</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 7 2.645</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># -25 &quot;(-nan|nan|0)&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 0.0001 0.001</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># do_test(4 2)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>enable_testing()</mark></p><p>开启当前目录及子目录的测试支持。</p><p>②<mark>add_test</mark></p><p>添加一条测试</p><p>简版用法：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [&lt;arg&gt;...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>name</code>为本条测试名称</li><li><code>command</code>测试用的命令</li><li><code>arg</code>传递测试命令的参数</li></ul><p>③<mark>set_tests_properties</mark></p><p>设置测试的属性。</p><p>语法</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_tests_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(test1 [test2...] PROPERTIES prop1 value1 prop2 value2)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>test1...</code>为用add_test添加的测试名</li><li><code>prop1</code>为需要设置的属性名，本节中只学<code>PASS_REGULAR_EXPRESSION</code>，表示测试程序的输出结果需要能匹配<code>value</code> 所表示的正则表达式才能通过，如果匹配不了则不通过。</li><li><code>value</code>要设置的属性值</li></ul><p>示例</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_tests_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Usage</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  PROPERTIES PASS_REGULAR_EXPRESSION </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Usage:.*number&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表示运行<code>Usage</code>这个测试时测试程序的输出结果要能正则匹配到&quot;Usage:.*number&quot;。</p><p>④<mark>function()与endfunction()</mark></p><p>用于在定义函数，分别表示函数开始与函数结束</p><p>语法</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [&lt;arg1&gt; ...])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>括号里第一个参数为函数名，后面是参数列表，可以有多个，多个参数用空格隔开</li></ul><p>示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 定义</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(do_test </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> arg result)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  add_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Comp</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${arg}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> COMMAND</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> \${target}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> \${arg}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  set_tests_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Comp</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${arg}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    PROPERTIES PASS_REGULAR_EXPRESSION </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${result}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 调用</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(Tutorial 4 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;4 is 1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p> </p><h2 id="第六步-添加测试面板支持" tabindex="-1"><a class="header-anchor" href="#第六步-添加测试面板支持"><span>第六步 添加测试面板支持</span></a></h2><h3 id="练习1-发送测试结果到测试面板" tabindex="-1"><a class="header-anchor" href="#练习1-发送测试结果到测试面板"><span>练习1 发送测试结果到测试面板</span></a></h3><p><code>CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 将enable_testing()替换为下面这行</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CTest)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在build目录执行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;MinGW Makefiles&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>之后执行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ctest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -VV</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Experimental</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即可。</p><p>完成之后可在https://my.cdash.org/index.php?project=CMakeTutorial查看提交的测试结果。</p><p> </p><p> </p><h2 id="第七步-添加系统特性检查" tabindex="-1"><a class="header-anchor" href="#第七步-添加系统特性检查"><span>第七步 添加系统特性检查</span></a></h2><h3 id="练习1-评估依赖可用性" tabindex="-1"><a class="header-anchor" href="#练习1-评估依赖可用性"><span>练习1 评估依赖可用性</span></a></h3><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions mysqrt.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># state that anybody linking to us needs to include the current source dir</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to find MathFunctions.h, while we don&#39;t.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          INTERFACE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${CMAKE_CURRENT_SOURCE_DIR}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># link our compiler flags interface library</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions tutorial_compiler_flags)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 1: Include CheckCXXSourceCompiles</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CheckCXXSourceCompiles)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 2:用check_cxx_source_compiles和简单C++代码检测</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 以下两个函数是否可用:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * std::log ln</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># * std::exp e^2</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 把结果存在HAVE_LOG 和 HAVE_EXP 中.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># Hint: Sample C++ code which uses log:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># #include &lt;cmath&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># int main() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#   std::log(1.0);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#   return 0;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">check_cxx_source_compiles(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#include &lt;cmath&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">int main() {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  std::log(1.0);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  return 0;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> HAVE_LOG)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">check_cxx_source_compiles(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#include &lt;cmath&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">int main() {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  std::exp(1.0);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  return 0;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> HAVE_EXP)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># TODO 3: 如果HAVE_LOG和HAVE_EXP为真, 添加预编译定义</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># &quot;HAVE_LOG&quot;和&quot;HAVE_EXP&quot;到目标MathFunctions上.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">#Hint: Use target_compile_definitions()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(HAVE_LOG </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> HAVE_EXP)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    target_compile_definitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions PRIVATE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HAVE_LOG&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;HAVE_EXP&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># install libs</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(installable_libs MathFunctions tutorial_compiler_flags)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TARGETS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${installable_libs}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> DESTINATION lib)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># install include headers</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FILES MathFunctions.h DESTINATION include)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>include</mark></p><p>用于导入其他CMake文件或模块。</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;file|module&gt; [OPTIONAL] [RESULT_VARIABLE &lt;var&gt;]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                      [NO_POLICY_SCOPE])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>②<mark>check_cxx_source_compiles</mark></p><p>检查给定的C++代码能不能编译及链接成可执行文件。通常用来检查当前环境中是否具有某些特性。</p><p>用法</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">check_cxx_source_compiles(&lt;code&gt; &lt;resultVar&gt; [FAIL_REGEX &lt;regex1&gt; [&lt;regex2&gt;...]])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>code</code>为需要检查的代码，需要包含<code>main</code>函数</li><li><code>resultVar</code>为检查结果，如果成功返回布尔真，否则返回布尔假</li><li><code>FAIL_REGEX</code>如果提供，则返回为假的结果需要能匹配上对应的正则表达式</li></ul><p>③<mark>target_compile_definitions</mark></p><p>为指定可执行文件及库文件这类目标添加编译器定义，用来控制代码中的条件编译。有点类似于<code>#cmakedefine</code>与<code>configure_file</code> 的作用，但这两个操作的结果会生成一个文件再进行引用，而<code>target_compile_definitions</code>不会生成文件。</p><p>用法</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_definitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;INTERFACE|PUBLIC|PRIVATE&gt; [items1...]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  [&lt;INTERFACE|PUBLIC|PRIVATE&gt; [items2...] ...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_definitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions PRIVATE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HAVE_LOG&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;HAVE_EXP&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><p> </p><h2 id="第八步-添加自定义命令及用自定义命令生成文件" tabindex="-1"><a class="header-anchor" href="#第八步-添加自定义命令及用自定义命令生成文件"><span>第八步 添加自定义命令及用自定义命令生成文件</span></a></h2><p>在Linux中，有许多的工具命令，例如<code>ls</code>、<code>mv</code>、<code>mkdir</code>等。在CMake项目中，可以用源代码写一些自定义小工具，然后在CMake中进行调用，来完成一些工作。</p><p>本节的内容为自定义一个<code>MakeTable</code>命令用来生成指定范围整数的平方根并保存到文件中，在计算的时候可以用这些已经计算好的值来辅助计算。</p><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions mysqrt.cxx Table.h)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MakeTable MakeTable.cxx)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_custom_command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  OUTPUT </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${CMAKE_CURRENT_BINARY_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/Table.h</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MakeTable </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${CMAKE_CURRENT_BINARY_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/Table.h</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  DEPENDS MakeTable</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># state that anybody linking to us needs to include the current source dir</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to find MathFunctions.h, while we don&#39;t.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          INTERFACE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${CMAKE_CURRENT_SOURCE_DIR}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          PRIVATE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${CMAKE_CURRENT_BINARY_DIR}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># link our compiler flags interface library</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions tutorial_compiler_flags)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># does this system provide the log and exp functions?</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CheckCXXSourceCompiles)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">check_cxx_source_compiles(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  #include &lt;cmath&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  int main() {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    std::log(1.0);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    return 0;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> HAVE_LOG)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">check_cxx_source_compiles(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  #include &lt;cmath&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  int main() {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    std::exp(1.0);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    return 0;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> HAVE_EXP)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add compile definitions</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(HAVE_LOG </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> HAVE_EXP)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  target_compile_definitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                             PRIVATE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HAVE_LOG&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;HAVE_EXP&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># install libs</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(installable_libs MathFunctions tutorial_compiler_flags)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TARGETS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${installable_libs}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> DESTINATION lib)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># install include headers</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FILES MathFunctions.h DESTINATION include)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>add_custom_command</mark></p><p>执行自定义指令。</p><p>简版用法</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_custom_command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(OUTPUT output1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                   COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> command1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   DEPENDS depends)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>OUTPUT</code>指定输出文件名</li><li><code>COMMAND</code>指定要执行的指令</li><li><code>DEPENDS</code>执行指令需要依赖的内容。如果是由<code>add_executable</code>或<code>add_library</code>添加的目标名，写这一条可以保证对应目标的生成。</li></ul><p> </p><p> </p><h2 id="第九步-打包安装程序" tabindex="-1"><a class="header-anchor" href="#第九步-打包安装程序"><span>第九步 打包安装程序</span></a></h2><p>发布程序可以有多种形式，比如安装包、压缩包、源文件等。CMake也提供了打包程序<code>cpack</code>可将程序打包成多种形式。</p><p>只需要在顶层CMakelists.txt中添加以下代码</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(InstallRequiredSystemLibraries)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPACK_RESOURCE_FILE_LICENSE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_CURRENT_SOURCE_DIR}/License.txt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPACK_PACKAGE_VERSION_MAJOR </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${Tutorial_VERSION_MAJOR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPACK_PACKAGE_VERSION_MINOR </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${Tutorial_VERSION_MINOR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPACK_SOURCE_GENERATOR </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;TGZ&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPack)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在项目构建完成之后，可以直接执行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cpack</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在Windows上默认情况会打包成.exe文件，所以需要先安装一个exe打包程序NSIS(Null Soft Installer)</p><p>NSIS下载地址：https://sourceforge.net/projects/nsis/</p><p>也可以指定生成器打包成对应的格式</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cpack</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ZIP</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> # 打包成ZIP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>具体生成器各类可以通过<code>cpack --help</code>查看</p><p>对于多配置项目，可以指定打包配置</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cpack</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Debug</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> # 打包Debug版本</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>也可以打包源代码</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cpack</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPackSourceConfig.cmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><p> </p><h2 id="第十步-选择静态链接库或动态链接库" tabindex="-1"><a class="header-anchor" href="#第十步-选择静态链接库或动态链接库"><span>第十步 选择静态链接库或动态链接库</span></a></h2><p><code>CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.15)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># set the project name and version</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial VERSION 1.0)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># specify the C++ standard</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_features</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE cxx_std_11)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add compiler warning flags just when building this project via</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># the BUILD_INTERFACE genex</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(gcc_like_cxx </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$&lt;COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU,LCC&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(msvc_cxx </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;$&lt;COMPILE_LANG_AND_ID:CXX,MSVC&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;$&lt;\${gcc_like_cxx}:$&lt;BUILD_INTERFACE:-Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused&gt;&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;$&lt;\${msvc_cxx}:$&lt;BUILD_INTERFACE:-W3&gt;&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># should we use our own math functions</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Use tutorial provided math implementation&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">BUILD_SHARED_LIBS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Use Dynamic? &quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> ON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># configure a header file to pass some of the CMake settings</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># to the source code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TutorialConfig.h.in TutorialConfig.h)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_ARCHIVE_OUTPUT_DIRECTORY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;\${PROJECT_BINARY_DIR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># .a .lib</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_RUNTIME_OUTPUT_DIRECTORY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;\${PROJECT_BINARY_DIR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># .dll .exe</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_LIBRARY_OUTPUT_DIRECTORY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;\${PROJECT_BINARY_DIR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># .so</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the MathFunctions library</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(USE_MYMATH)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  add_subdirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND EXTRA_LIBS MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the executable</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${EXTRA_LIBS}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tutorial_compiler_flags)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the binary tree to the search path for include files</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># so that we will find TutorialConfig.h</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                           &quot;\${PROJECT_BINARY_DIR}&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># add the install targets</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TARGETS Tutorial DESTINATION bin)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FILES </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${PROJECT_BINARY_DIR}/TutorialConfig.h&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  DESTINATION include</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># enable testing</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CTest)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># does the application run</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Runs </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Tutorial 25)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># does the usage message work?</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Usage </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">COMMAND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Tutorial)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_tests_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Usage</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  PROPERTIES PASS_REGULAR_EXPRESSION </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Usage:.*number&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># define a function to simplify adding tests</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(do_test </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> arg result)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  add_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NAME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Comp</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${arg}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> COMMAND</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> \${target}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> \${arg}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  set_tests_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Comp</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${arg}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    PROPERTIES PASS_REGULAR_EXPRESSION </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${result}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># do a bunch of result based tests</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(Tutorial 4 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;4 is 2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(Tutorial 9 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;9 is 3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(Tutorial 5 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;5 is 2.236&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(Tutorial 7 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;7 is 2.645&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(Tutorial 25 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;25 is 5&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(Tutorial -25 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-25 is (-nan|nan|0)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">do_test(Tutorial 0.0001 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0.0001 is 0.01&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># setup installer</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(InstallRequiredSystemLibraries)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPACK_RESOURCE_FILE_LICENSE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_CURRENT_SOURCE_DIR}/License.txt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPACK_PACKAGE_VERSION_MAJOR </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${Tutorial_VERSION_MAJOR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPACK_PACKAGE_VERSION_MINOR </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${Tutorial_VERSION_MINOR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPACK_SOURCE_GENERATOR </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;TGZ&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPack)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>要点</strong></p><p>①<mark>BUILD_SHARED_LIBS</mark></p><p>全局为<code>add_library</code>设置库的生成类型。<code>ON</code>则生成动态链接库，<code>OFF</code>则生成静态链接库。</p><p>②<mark>CMAKE_ARCHIVE_OUTPUT_DIRECTORY</mark></p><p>指定静态库文件的生成位置。</p><p>③<mark>CMAKE_RUNTIME_OUTPUT_DIRECTORY</mark></p><p>指定执行文件的生成位置，包括可执行程序和Windows上动态库文件(.dll)</p><p>④<mark>CMAKE_LIBRARY_OUTPUT_DIRECTORY</mark></p><p>非Windows平台上的生成的.so库文件</p><p> </p><p> </p><h2 id="第十一步-添加导出配置" tabindex="-1"><a class="header-anchor" href="#第十一步-添加导出配置"><span>第十一步 添加导出配置</span></a></h2><p>先来复习一下在CMake中使用其他库的方法。本节把<code>MathFunctions</code>生成的库文件、头文件放到其他路径当中，这时库的引入方式如下：</p><p><code>CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(mathlib_DIR C:/Users/YAN/Desktop/cmake/mathlib)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># cmake中使用第三方库的一般步骤</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 1. 设置头文件位置</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PRIVATE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${mathlib_DIR}/include&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 2. 设置库文件搜索位置</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">target_link_directories(Tutorial PRIVATE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${mathlib_DIR}/lib&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 3. 指定需要链接的库（libXXX.a libXXX.dll直接写成XXX的形式即可）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PRIVATE MathFunctions)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在的问题是，如果一个库不用CMake管理，那就是用如上方法来引用，可是这个库也是由CMake构建来的，还用同样的方法来引入，那CMake不是白用了吗？</p><p>用CMake管理简化后的版本为</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_minimum_required</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VERSION 3.10)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 如果库是安装在环境变量里有的位置，这行可以不用写</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># set(MathFunctions_DIR C:/Users/YAN/Desktop/cmake/mathlib/lib/cmake/MathFunctions)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">find_package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions REQUIRED)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_link_libraries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PRIVATE MathFunctions)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以本节内容为如何导出一个用CMake管理的库。</p><p><strong>第一步</strong> 将目标安装添加导出</p><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TARGETS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${installable_libs}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        EXPORT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MathFunctionsTargets</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        DESTINATION lib)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>EXPORT</code>可以生成一个<code>MathFunctionsTargets.cmake</code>的文件，里面描述了此处安装的这些目标的一些导出配置。</p><p><strong>第二步</strong> 要让导出文件配置的路径对其他项目也可用，而不是绑定当前项目路径，需要修改头文件搜索路径，构建时和安装后为不同值</p><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_include_directories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MathFunctions</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           INTERFACE</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            $&lt;BUILD_INTERFACE:</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${CMAKE_CURRENT_SOURCE_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            $&lt;INSTALL_INTERFACE:include&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                           )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第三步</strong> 安装生成的<code>MathFunctionsTargets.cmake</code></p><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(EXPORT MathFunctionsTargets</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  FILE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> MathFunctionsTargets.cmake</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  DESTINATION lib/cmake/MathFunctions</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第四步</strong> 准备<code>MathFunctionsConfig.cmake</code>文件模板与生成</p><p>用CMake管理的库需要用<code>find_package</code>进行导入，为了让<code>find_package</code>能正确找到对应的库，需要再准备一个 <code>MathFunctionsConfig.cmake</code>文件，通常由模板生成，模板格式固定，内容如下</p><p><code>MathFunctions/Config.cmake.in</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@PACKAGE_INIT@</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${CMAKE_CURRENT_LIST_DIR}/MathFunctionsTargets.cmake&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由<code>configure_package_config_file</code>根据模板生成<code>MathFunctionsConfig.cmake</code>文件。</p><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CMakePackageConfigHelpers)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">configure_package_config_file(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${CMAKE_CURRENT_SOURCE_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/Config.cmake.in</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;\${CMAKE_CURRENT_BINARY_DIR}/MathFunctionsConfig.cmake&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  INSTALL_DESTINATION </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lib/cmake/example&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  NO_SET_AND_CHECK_MACRO</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  NO_CHECK_REQUIRED_COMPONENTS_MACRO</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第五步</strong> 生成版本文件（非必需）</p><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">write_basic_package_version_file(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;\${CMAKE_CURRENT_BINARY_DIR}/MathFunctionsConfigVersion.cmake&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  VERSION </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${Tutorial_VERSION_MAJOR}.\${Tutorial_VERSION_MINOR}&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  COMPATIBILITY AnyNewerVersion</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>第六步</strong> 安装生成文件</p><p><code>MathFunctions/CMakeLists.txt</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FILES</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  \${CMAKE_CURRENT_BINARY_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/MathFunctionsConfig.cmake</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  \${CMAKE_CURRENT_BINARY_DIR}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/MathFunctionsConfigVersion.cmake</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  DESTINATION lib/cmake/MathFunctions</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p> </p><h2 id="第十二步-打包调试版和发行版" tabindex="-1"><a class="header-anchor" href="#第十二步-打包调试版和发行版"><span>第十二步 打包调试版和发行版</span></a></h2><p>本节示例只针对单配置生成器。对多配置生成器（如Visual Studio）不生效。</p><p>CMake一个构建目录只能有一种配置，分别为<code>Debug</code>，<code>Release</code>，<code>MinSizeRel</code>，<code>RelWithDebInfo</code>。</p><p>对于需要指定的不同版本，只需要在配置时指明即可</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 指定生成器、配置为Release版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;MinGW Makefiles&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DCMAKE_BUILD_TYPE=Release</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 使用默认生成器，配置为Debug版</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DCMAKE_BUILD_TYPE=Debug</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ..</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要让Debug版本生成的目标名称与Release版本不同，可以使用<code>CMAKE_DEBUG_POSTFIX</code>为Debug版设置后缀。</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CMAKE_DEBUG_POSTFIX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> d)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial tutorial.cxx)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_target_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PROPERTIES </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DEBUG_POSTFIX</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> \${CMAKE_DEBUG_POSTFIX}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样一来该目标及其依赖的目标生成的文件都会带有后缀<code>d</code>。</p><p>通常来说会把Debug版与Release版分别放入两个<code>debug</code>和<code>release</code>目录中。如果只需要打包一版本，到对应目录中直接运行<code>cpack</code> 即可。如果需要同时打包两个版本的内容，则在<code>debug</code>和<code>release</code>同级目录下新建一个<code>MultiCPackConfig.cmake</code>文件，内容如下</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;release/CPackConfig.cmake&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CPACK_INSTALL_CMAKE_PROJECTS</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;debug;Tutorial;libSqrtLibraryd.a;/&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;release;Tutorial;ALL;/&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>CPACK_INSTALL_CMAKE_PROJECTS</code>用来指定要打包的内容，可以有多项，每一项里有4部分内容，分别为</p><ul><li>项目路径：指定要打包的项目所在的路径</li><li>项目名称：指定要打包的项目的名称</li><li>安装组件：指定要打包的项目的安装组件。可以是ALL（所有组件）、DEFAULT（默认组件）或者是一个具体的组件名称</li><li>安装路径：指定要打包的项目的安装路径（相对整打包好的整个目录来说的）</li></ul><p>完成之后在本目录下执行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cpack</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MultiCPackConfig.cmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即可打包配置好的内容。</p><p> </p><h2 id="练习-cmake-gui的使用" tabindex="-1"><a class="header-anchor" href="#练习-cmake-gui的使用"><span>练习 cmake-gui的使用</span></a></h2><p>前面的配置与构建过程都是用命令，CMake还提供了界面工具<code>cmake-gui</code>可以完成类似的工作。</p><p> </p><p> </p><h1 id="cmake基础知识补充" tabindex="-1"><a class="header-anchor" href="#cmake基础知识补充"><span>CMake基础知识补充</span></a></h1><p>前面Tutorial中，只是简单过了一下涉及到的知识，并没有对相关知识进行扩展。部分的内容主要为补充一些基础知识。由于CMake文档当中内容繁多，本部分内容也不会全部涉及，只挑选其中一部分进行讲解。有需要更深入了解的请自行查阅<a href="https://cmake.org/cmake/help/latest/index.html" target="_blank" rel="noopener noreferrer">官方文档</a>。</p><p> </p><h2 id="cmake命令使用" tabindex="-1"><a class="header-anchor" href="#cmake命令使用"><span>CMake命令使用</span></a></h2><h3 id="创建项目构建系统" tabindex="-1"><a class="header-anchor" href="#创建项目构建系统"><span>创建项目构建系统</span></a></h3><p><strong>用法</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cmake [&lt;options&gt;] &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-to-source | </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-to-existing-build&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cmake [&lt;options&gt;] -S &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-to-source&gt; -B &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-to-build&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cmake [&lt;options&gt;] &lt;path-to-source&gt;</code></p><p>指定源文件（含有<code>CMakeLists.txt</code>文件的）目录，在当前目录下生成构建文件。指定目录可以是相对路径，也可以是绝对路径。</p><p><code>cmake [&lt;options&gt;] &lt;path-to-existing-build&gt;</code></p><p>指定已经生成构建文件（已经生成有<code>CMakeCache.txt</code>）的目录，重新加载（生成）。</p><p><code>cmake [&lt;options&gt;] -S &lt;path-to-source&gt; -B &lt;path-to-build&gt;</code></p><p>明确指定源文件目录与构建目录。</p><p> </p><p><strong>常用选项</strong></p><ul><li><p><strong>-S &lt;path-to-source&gt;</strong>：指定源文件根目录</p></li><li><p><strong>-B &lt;path-to-build&gt;</strong>：指定构建文件目录</p></li><li><p><strong>-G &lt;generator-name&gt;</strong>：指定生成器。具体支持哪些生成器可用</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看。</p></li></ul><p>具体示例：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 指定生成器为MinGW Makefiles，生成mingw32-make的Makefile文件</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 指定源文件根目录为src，构建目录为build</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;MinGW Makefiles&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -B</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><h3 id="构建项目" tabindex="-1"><a class="header-anchor" href="#构建项目"><span>构建项目</span></a></h3><p><strong>用法</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cmake --build &lt;dir&gt; [&lt;options&gt;] [-- &lt;build-tool-options&gt;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>cmake --build &lt;dir&gt;</code></p><p>&lt;dir&gt;为上述生成了构建文件的目录。生成器对应的构建工具来构建项目。</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cmake --build .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><p><strong>常用选项</strong></p><ul><li><p><strong>-j [&lt;jobs&gt;], --parallel [&lt;jobs&gt;]</strong>：指定构建时的线程数，可以开启多线程构建提升速度</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -j</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --parallel</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>-t &lt;tgt&gt;..., --target &lt;tgt&gt;...</strong>：指定构建目标。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 指定目标为clean</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 指定构建目标为install</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>--clean-first</strong>：构建前先clean</p></li></ul><p>使用<code>cmake --build</code>可以查看相关帮助信息。</p><p> </p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><p>安装已构建好的项目</p><p><strong>用法</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">di</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">r&gt; [&lt;options&gt;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>dir</code>为项目构建目录</li><li><code>options</code>安装选项</li></ul><p>常用选项</p><ul><li>**--config &lt;cfg&gt; ** 对于多配置的项目，用于指定需要安装的配置</li><li><strong>--prefix &lt;prefix&gt;</strong> 指定安装目录</li></ul><p> </p><p> </p><h3 id="运行脚本" tabindex="-1"><a class="header-anchor" href="#运行脚本"><span>运行脚本</span></a></h3><p>CMake在一定程度上也可以算是一种编程语言。但是前面执行对应的代码都需要建立一个项目，提供CMakeLists.txt文件，再生成构建文件，步骤比较多。</p><p>尤其是在学习阶段，有时候可能只是想看一下里面一些内容运行是什么效果，这样做就有点麻烦了。CMake提供了一种直接执行脚本的方式，即先建立一个 <code>&lt;filename&gt;.cmake</code>的脚本，再通过以下命令来执行。</p><p><strong>用法</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-D &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">va</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">r&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">valu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">]...</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cmake-script-fil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt; [-- &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">unparsed-option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">...]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 简写</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cmake-script-fil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> learn.cmake</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><h3 id="运行命令行工具" tabindex="-1"><a class="header-anchor" href="#运行命令行工具"><span>运行命令行工具</span></a></h3><p>CMake提供了一系列命令行工具如文件复制删除、哈希值计算等，用<code>cmake -E</code>可查看相关帮助。</p><p><strong>用法</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -E</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">comman</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt; [&lt;options&gt;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 以JSON格式输出CMake功能</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -E</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> capabilities</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 计算文件MD5值</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -E</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> md5sum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tutorial.cxx</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 如果文件有改动则复制</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cmake</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -E</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> copy_if_different</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> file1.txt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build/file2.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多命令详见<a href="https://cmake.org/cmake/help/latest/manual/cmake.1.html#run-a-command-line-tool" target="_blank" rel="noopener noreferrer">官方文档</a></p><p> </p><p> </p><p> </p><h2 id="cmake指令" tabindex="-1"><a class="header-anchor" href="#cmake指令"><span>CMake指令</span></a></h2><h3 id="脚本指令" tabindex="-1"><a class="header-anchor" href="#脚本指令"><span>脚本指令</span></a></h3><h4 id="message" tabindex="-1"><a class="header-anchor" href="#message"><span>message</span></a></h4><p>用于输出信息。</p><p><strong>用法</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 普通消息 &lt;mode&gt; 部分可以省略</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([&lt;mode&gt;] </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;message text&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ...)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 状态消息</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;checkState&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;message text&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ...)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 配置日志</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(CONFIGURE_LOG &lt;text&gt;...)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;mode&gt;</code>常用选项有如下几种</p><ul><li><code>FATAL_ERROR</code>：CMake错误，会终止往下执行</li><li><code>SEND_ERROR</code>：CMake错误，会继续执行，但会跳过一些文件的生成</li><li><code>WARNING</code>：输出警告信息，不会终止执行</li><li><code>NOTICE</code>：一些需要注意的提示信息</li><li><code>DEBUG</code>：输出调试信息</li><li><code>STATUS</code>：输出当前状态信息</li></ul><p>更多选项与例子见<a href="https://cmake.org/cmake/help/latest/command/message.html" target="_blank" rel="noopener noreferrer">官方文档</a></p><p><code>&lt;checkState&gt;</code>选项有以下三种</p><ul><li><code>CHECK_START</code>：开始检测</li><li><code>CHECK_PASS</code>：检测通过</li><li><code>CHECK_FAIL</code>：检测不通过</li></ul><p> </p><h4 id="变量定义与取消" tabindex="-1"><a class="header-anchor" href="#变量定义与取消"><span>变量定义与取消</span></a></h4><p><strong>定义普通变量</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt; &lt;value&gt;... [PARENT_SCOPE])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>PARENT_SCOPE</code>会将该变量定义到父作用域。并且变量值在当前作用域不可用。</li></ul><p><strong>修改环境变量</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ENV{&lt;variable&gt;} [&lt;value&gt;])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>定义Cache Entry</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt; &lt;value&gt;... </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CACHE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;type&gt; &lt;docstring&gt; [FORCE])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p><code>type</code>为类型，有以下几种</p><ul><li><p><code>BOOL</code>布尔<code>ON/OFF</code>值。<code>cmake-gui</code>中为复选框</p></li><li><p><code>FILEPATH</code>文件路径。<code>cmake-gui</code>中为文件选择窗口</p></li><li><p><code>PATH</code>目录路径，<code>cmake-gui</code>中为文件选择窗口</p></li><li><p><code>STRING</code>一行文字，<code>cmake-gui</code>中为文本输入框或下拉框</p><p>下拉框需要设置STRINGS属性，多项可用空格或分号隔开</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STRINT_TEST </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> CACHE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> STRING</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Input text ...&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CACHE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> STRINT_TEST PROPERTY STRINGS hello world </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> you)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><code>INTERNAL</code>一行文本，<code>cmake-gui</code>中不显示此类变量。用来存储处理过程中不变的内容。</p></li></ul><p><strong>变量取消定义</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt; [</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CACHE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | PARENT_SCOPE])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ENV{&lt;variable&gt;})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 取消环境变量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ENV{JAVA_HOME})</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 取消Cache Entry变量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FILE_PATH </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CACHE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 取消上一级作用域的变量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">unset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VAR_OUT PARENT_SCOPE)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><h4 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断"><span>条件判断</span></a></h4><p><strong>语法</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;condition&gt;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">elseif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;condition&gt;) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 可选、可重复</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()              </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 可选</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>基础用法</strong></p><p><em>此部分测试不能用脚本运行的方式进行，会有一些其他问题</em></p><ul><li><p>常量判断</p><p><code>1</code>, <code>ON</code>, <code>YES</code>, <code>TRUE</code>, <code>Y</code>为真， <code>0</code>, <code>OFF</code>, <code>NO</code>, <code>FALSE</code>, <code>N</code>, <code>IGNORE</code>, <code>NOTFOUND</code> 假，不区分大小写。如果不是这些常量，则会被当作变量或字符串对待。</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(YES) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 把以上值填入括号测试</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS 真)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS 假)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>变量判断</p><p>普通变量和环境变量都用这种方式。如果变量值不是为假的常量则为真。值为上述为假的或未定义则为假</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VAR_1 hello world)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(VAR_1) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 变量用做判断时不用加\${}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS 真)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS 假)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>引号内字符串</p><p>除了引号内为上述为真的值，其他都为假</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HELLO&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS 真)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS 假)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><strong>逻辑运算</strong></p><p>与</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;cond1&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;cond2&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;cond1&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">OR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;cond2&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>非</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NOT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;condition&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p> </p><p><strong>其他常用判断</strong></p><ul><li><p><code>if(TARGET target-name)</code> 判断一个目标是否存在(由<code>add_executable()</code>, <code>add_library()</code>, <code>add_custom_target()</code>创建)</p></li><li><p><code>if(DEFINED &lt;name&gt;|CACHE{&lt;name&gt;}|ENV{&lt;name&gt;})</code>判断一个变量是否已定义</p></li><li><p><code>if(&lt;variable|string&gt; IN_LIST &lt;variable&gt;)</code>判断给定元素是否在列表中。列表中各项可用空格或分号隔开</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(M_LIST hello;world;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">not</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> IN_LIST</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> M_LIST)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS 真)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS 假)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>if(EXISTS path-to-file-or-directory)</code>判断文件或路径是否存在</p></li><li><p><code>if(&lt;variable|string&gt; MATCHES regex)</code>判断能否匹配上正则</p></li></ul><p>更多比较操作见<a href="https://cmake.org/cmake/help/v3.26/command/if.html" target="_blank" rel="noopener noreferrer">官方文档</a>。</p><p> </p><h4 id="循环" tabindex="-1"><a class="header-anchor" href="#循环"><span>循环</span></a></h4><p><strong>foreach</strong></p><p>用法一：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;loop_var&gt; &lt;item_list&gt;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endforeach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(M_LIST hello world </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(WORD </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${M_LIST}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${WORD}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endforeach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>loop_var</code> 用来接收列表中每一项的变量</li><li><code>item_list</code>需要循环的列表，里面每一项用空格或者分号隔开</li></ul><p>可以用<code>continue()</code>结束本次循环，用<code>break()</code>终止循环</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(M_LIST hello world </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> how </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">not</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 1 2 3)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(WORD </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${M_LIST}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${WORD}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> STREQUAL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;and&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        continue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${WORD}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> STREQUAL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;not&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${WORD}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endforeach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用法二：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;loop_var&gt; RANGE &lt;stop&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>从0循环到<code>stop</code>指定的数，可以为负数</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(NUM RANGE -11)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${NUM}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endforeach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;loop_var&gt; RANGE &lt;start&gt; &lt;stop&gt; [&lt;step&gt;])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>从<code>start</code>指定的数循环到<code>stop</code>指定的数，默认步长为1，也可以指定步长。</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(NUM RANGE 10 20 2)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${NUM}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endforeach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用法三：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;loop_var&gt; IN [LISTS [&lt;lists&gt;]] [ITEMS [&lt;items&gt;]])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>LISTS</code>后面可以跟一个或多个用分号或空格隔开的列表，会分别循环取出每个列表中的每一项</li><li><code>ITEMS</code>后面可以放上多项内容，循环也会取出每一项</li></ul><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(A 0;1;3)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(B 2 3)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(C </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;4 5&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(D 6;7 8)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(E </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(X IN LISTS A B C D E ITEMS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${A}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;X=\${X}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endforeach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用法四：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;loop_var&gt;... IN ZIP_LISTS &lt;lists&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>用指定变量循环多个列表</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND English one two three four)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND Bahasa satu dua tiga)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND Chinese 一 二 三 四 五 六)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(num IN ZIP_LISTS English Bahasa Chinese)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;num_0=\${num_0}, num_1=\${num_1}, num_2=\${num_2}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endforeach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(en ba ch IN ZIP_LISTS English Bahasa Chinese)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;en=\${en}, ba=\${ba}, ch=\${ch}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endforeach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p><strong>while循环</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;condition&gt;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endwhile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>condition</code>为真时循环，真假的处理情况与<code>if()</code>相同。可以用<code>continue()</code>结束本次循环，用<code>break()</code>终止循环</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(i 0)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">LESS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 10)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;i = \${i}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(EXPR i </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${i} + 1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endwhile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p> </p><h4 id="字符串操作" tabindex="-1"><a class="header-anchor" href="#字符串操作"><span>字符串操作</span></a></h4><p><strong>查找与替换</strong></p><p>查找：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FIND &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; &lt;substring&gt; &lt;output_variable&gt; [REVERSE])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>string</code>文本内容</li><li><code>substring</code>需要在文本内容中查找的子串</li><li><code>output_variable</code>存放子串第一次出现的索引，查找不到则为-1，只针对单字节字符，多字节字符会返回字节数据的索引</li><li><code>REVERSE</code>如果写上，则从文本末尾开始查找</li></ul><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FIND </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello World Hello World Hello World&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> index REVERSE)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${index}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>替换：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REPLACE &lt;match_string&gt; &lt;replace_string&gt; &lt;output_variable&gt; &lt;input&gt; [&lt;input&gt;...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>match_string</code>需要被替换的内容</li><li><code>replace_string</code>用来替换的内容</li><li><code>output_variable</code>存放替换后的结果</li><li><code>input</code>原始文本，可以有多项</li></ul><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REPLACE </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;好&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> result </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello World&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Nod Hello &quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot; And what&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${result}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>正则匹配</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REGEX MATCH &lt;regular_expression&gt; &lt;output_variable&gt; &lt;input&gt; [&lt;input&gt;...])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REGEX MATCHALL &lt;regular_expression&gt; &lt;output_variable&gt; &lt;input&gt; [&lt;input&gt;...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>regular_expression</code>正则表达式</li><li><code>output_variable</code>存放匹配结果</li><li><code>input</code>原始文本，可以有多项，匹配前会被拼接到一起</li></ul><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REGEX MATCH [0-9] result </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello123world456hello444cmake&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${result}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REGEX MATCHALL [0-9] result </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello123world456hello444cmake&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${result}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正则替换</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REGEX REPLACE &lt;regular_expression&gt; &lt;replacement_expression&gt; &lt;output_variable&gt; &lt;input&gt; [&lt;input&gt;...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>regular_expression</code>正则表达式</li><li><code>replacement_expression</code>替换内容</li><li><code>output_variable</code>存放结果</li><li><code>input</code>原始文本，可以有多项，匹配前会被拼接到一起</li></ul><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REGEX REPLACE [0-9] + result </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello123world456hello444cmake&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${result}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p><strong>修改</strong></p><p>前后追加：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND &lt;string_variable&gt; [&lt;input&gt;...])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(PREPEND &lt;string_variable&gt; [&lt;input&gt;...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>……</p><p>更多字符串操作见<a href="https://cmake.org/cmake/help/v3.26/command/string.html" target="_blank" rel="noopener noreferrer">官方文档</a></p><p> </p><h4 id="列表操作" tabindex="-1"><a class="header-anchor" href="#列表操作"><span>列表操作</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 列表长度</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(LENGTH &lt;list&gt; &lt;out-var&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 获取指定索引处的元素</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GET &lt;list&gt; &lt;element index&gt; [&lt;index&gt; ...] &lt;out-var&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用指定符号连接列表中的每一项</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(JOIN &lt;list&gt; &lt;glue&gt; &lt;out-var&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 获取子列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(SUBLIST &lt;list&gt; &lt;begin&gt; &lt;length&gt; &lt;out-var&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 查询指定元素索引，不存在返回-1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FIND &lt;list&gt; &lt;value&gt; &lt;out-var&gt;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 往列表后追加内容</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND &lt;list&gt; [&lt;element&gt;...])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 用正则筛选列表内容</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(FILTER &lt;list&gt; {INCLUDE | EXCLUDE} REGEX &lt;regex&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 在指定的位置插入元素</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(INSERT &lt;list&gt; &lt;index&gt; [&lt;element&gt;...])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 移出末尾一个或多个元素</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(POP_BACK &lt;list&gt; [&lt;out-var&gt;...])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 移出头部一个或多个元素</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(POP_FRONT &lt;list&gt; [&lt;out-var&gt;...])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 向前追加元素</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(PREPEND &lt;list&gt; [&lt;element&gt;...])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 删除指定值的元素</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REMOVE_ITEM &lt;list&gt; &lt;value&gt;...)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 删除指定索引位置的元素</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REMOVE_AT &lt;list&gt; &lt;index&gt;...)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 删除重复的元素</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REMOVE_DUPLICATES &lt;list&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 对列表每项进行一些操作</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TRANSFORM &lt;list&gt; &lt;ACTION&gt; [&lt;SELECTOR&gt;] [OUTPUT_VARIABLE &lt;output variable&gt;])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 逆序列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REVERSE &lt;list&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 排序</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(SORT &lt;list&gt; [COMPARE &lt;compare&gt;] [CASE &lt;case&gt;] [ORDER &lt;order&gt;])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>TRANSFORM</code>中的<code>ACTION</code>有以下操作</p><ul><li><p><code>APPEND</code>, <code>PREPEND</code>:为每一项向前或向后追加内容</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(LS AA 11 11 B 22  11 C 33 D 11 44 E)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TRANSFORM LS APPEND .exe)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${LS}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>TOUPPER</code>, <code>TOLOWER</code>:转换大小写</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(LS AA 11 11 B 22  11 C 33 D 11 44 E)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TRANSFORM LS TOLOWER)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${LS}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>STRIP</code>:去除头尾空格</p></li><li><p><code>GENEX_STRIP</code>:去除生成器表达式</p></li><li><p><code>REPLACE</code>:正则替换</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(LS AA 11 11 B 22  11 C 33 D 11 44 E)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TRANSFORM LS REPLACE [0-9] </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;X&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${LS}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><code>SELECTOR</code>用来决定需要对哪些元素进行操作</p><ul><li><p><code>AT</code>: 按索引指定需要操作的元素</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TRANSFORM &lt;list&gt; &lt;ACTION&gt; AT &lt;index&gt; [&lt;index&gt; ...] ...)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(LS AA 11 11 B 22  11 C 33 D 11 44 E)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TRANSFORM LS TOLOWER AT 0 3)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${LS}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>FOR</code>:用指定起点、终点、步长的方式进行操作</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TRANSFORM &lt;list&gt; &lt;ACTION&gt; FOR &lt;start&gt; &lt;stop&gt; [&lt;step&gt;] ...)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(LS AA 11 11 B 22  11 C 33 D 11 44 E)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TRANSFORM LS TOLOWER FOR 0 10 2)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${LS}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>REGEX</code>: 用正则匹配来决定需要进行操作的</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TRANSFORM &lt;list&gt; &lt;ACTION&gt; REGEX &lt;regular_expression&gt; ...)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(LS AA 11 11 B 22  11 C 33 D 11 44 E)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(TRANSFORM LS APPEND .exe REGEX [A-Z])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${LS}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>更多详情见<a href="https://cmake.org/cmake/help/v3.26/command/list.html" target="_blank" rel="noopener noreferrer">官方文档</a></p><p> </p><h4 id="数学表达式" tabindex="-1"><a class="header-anchor" href="#数学表达式"><span>数学表达式</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(EXPR &lt;variable&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&lt;expression&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [OUTPUT_FORMAT &lt;format&gt;])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>variable</code>：运算结果</li><li><code>expression</code>：数学表达式</li><li><code>format</code>：输出格式，值为<code>DECIMAL</code>十进制和<code>HEXADECIMAL</code>十六进制</li></ul><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(EXPR value </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100 * 100&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> OUTPUT_FORMAT DECIMAL)     </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(EXPR value </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100 * 0xA&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> OUTPUT_FORMAT HEXADECIMAL)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><h4 id="系统信息查询" tabindex="-1"><a class="header-anchor" href="#系统信息查询"><span>系统信息查询</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_host_system_information</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(RESULT &lt;variable&gt; QUERY &lt;key&gt; ...)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>variable</code>存放查询结果</li><li><code>key</code>需要查询的信息，可以为多项，空格隔开</li></ul><p>示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">cmake_host_system_information</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(RESULT info QUERY HOSTNAME OS_NAME)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${info}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>更多细节见<a href="https://cmake.org/cmake/help/v3.26/command/cmake_host_system_information.html" target="_blank" rel="noopener noreferrer">官方文档</a></p><p> </p><h4 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h4><p><strong>1. 函数定义</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [&lt;arg1&gt; ...])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 函数定义会创建一个作用域</strong></p><p>没有指定了变量的<code>PARENT_SCOPE</code>时，在函数内部修改变量值在外部无法访问。</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(OUT_VAR 100)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(func arg1 arg2)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(OUT_VAR 11 PARENT_SCOPE) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># PARENT_SCOPE修改外部变量，没有PARENT_SCOPE则修改不到外部变量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;OUT_VAR IN func = \${OUT_VAR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(func)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">func(1 2)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;OUT_VAR = \${OUT_VAR}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 函数支持可变参数</strong></p><p>函数可以在定义的时候指定一些参数名，但在使用的时候可以传递比已定义参数数量多的数据。可以用以下几个变量来获取参数：</p><ul><li><code>ARGC</code> ：参数数量</li><li><code>ARGV</code> ：所有参数组成的列表</li><li><code>ARGN</code>：没有命名的参数列表</li><li><code>ARGV0,ARGV1,ARGV2,...ARGVn</code>：分别表示第0、1、2、……n个参数</li></ul><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(func arg1 arg2)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ARGC = \${ARGC}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ARGV = \${ARGV}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ARGN = \${ARGN}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;arg1 = \${arg1}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;arg2 = \${arg3}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ARGV2 = \${ARGV2}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ARG IN LISTS ARGN)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ARG = \${ARG}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    endforeach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(func)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">func(1 2 3 4 5 6 7)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 参数含关键字的函数</strong></p><p>例如函数<code>target_link_library</code>中的<code>PUBLIC | PRIVATE | INTERFACE</code>即为关键字，如果需要在自定义函数中使用类似的关键字，需要用到 <code>cmake_parse_arguments</code></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cmake_parse_arguments(&lt;prefix&gt; &lt;options&gt; &lt;one_value_keywords&gt; &lt;multi_value_keywords&gt; &lt;args&gt;...)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cmake_parse_arguments(PARSE_ARGV &lt;N&gt; &lt;prefix&gt; &lt;options&gt; &lt;one_value_keywords&gt; &lt;multi_value_keywords&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一种方式可以在函数和宏中使用，第二种方式只能在函数中使用。第二种方式自动从<code>ARGV</code>里获取函数参数值，从第<code>&lt;N&gt;</code> 个参数开始解析。其他参数如下：</p><ul><li><code>prefix</code>：前缀，可以用<code>prefix_&lt;KEYWORD&gt;</code>的形式访问对应的参数值</li><li><code>options</code>：不接收数据的关键字列表</li><li><code>one_value_keywords</code>：接收一项数据的关键字列表</li><li><code>multi_value_keywords</code>：接收多项数据关键字列表</li><li><code>args</code>：函数的参数，可以直接放<code>\${ARGV}</code>或<code>\${ARGN}</code></li></ul><p>示例：</p><p>不接收数据的关键字函数</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(test_parse)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cmake_parse_arguments(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;CPA&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;INSTALL_INCLUDE;INSTALL_LIB&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> \${ARGV}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;INSTALL_INCLUDE = \${CPA_INSTALL_INCLUDE}  INSTALL_LIB = \${CPA_INSTALL_LIB}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test_parse(INSTALL_LIB)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接收一项数据的关键字函数</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(test_parse)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cmake_parse_arguments(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;CPA&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;FILE&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> \${ARGV}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;FILE = \${CPA_FILE}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test_parse(FILE </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cpp)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接收多项数据的关键字函数</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(test_parse)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cmake_parse_arguments(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;CPA&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;LIBS&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> \${ARGV}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;LIBS = \${CPA_LIBS}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test_parse(LIBS libmath.a libpng.a libtool.a)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>综合示例</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(test_parse)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cmake_parse_arguments(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;CPA&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;INSTALL_INCLUDES;INSTALL_LIBS&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;CONFIG_FILE&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;LIBS;CPPFILES;HEADFILES&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> \${ARGV}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;INSTALL_INCLUDES = \${CPA_INSTALL_INCLUDES}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;INSTALL_LIBS = \${CPA_INSTALL_LIBS}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;CONFIG_FILE = \${CPA_CONFIG_FILE}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;LIBS = \${CPA_LIBS}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;CPPFILES = \${CPA_CPPFILES}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HEADFILES = \${CPA_HEADFILES}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endfunction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test_parse(LIBS libmath.a libfun.a CONFIG_FILE config.cmake CPPFILES main.cpp hello.cpp INSTALL_LIBS)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="宏定义" tabindex="-1"><a class="header-anchor" href="#宏定义"><span>宏定义</span></a></h4><p>CMake中宏指令定义与用法类似函数的定义与用法。区别类似于C语言中宏函数定义与普通函数定义。</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">macro</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [&lt;arg1&gt; ...])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;commands&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endmacro</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">macro</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(macrofun arg1 arg2)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${arg1} - \${arg2}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endmacro</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">macrofun(100 hello)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MACROFUN(200 nice) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 不区分大小写</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cmake_language(CALL macrofun 300 Hug) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 另外的调用方式</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>宏定义中可变参数与关键字参数用法与函数相同。</p><p>宏定义与函数不同点：</p><ul><li>宏定义不会创建新的使作用域</li><li>函数中所有参数、包括<code>ARGC</code>、<code>ARGV</code>等都是变量，但宏定义中这些参数不是变量，因此不能用类似<code>if(DEFINED ...)</code> 的形式来检测宏定义中对应的参数是否已定义</li><li>宏定义的调用类似于把宏的内容直接复制到调用的地方</li></ul><p> </p><h4 id="configure-file" tabindex="-1"><a class="header-anchor" href="#configure-file"><span>configure_file</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">configure_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;input&gt; &lt;output&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [NO_SOURCE_PERMISSIONS | USE_SOURCE_PERMISSIONS | FILE_PERMISSIONS &lt;perms&gt;...]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [COPYONLY] [ESCAPE_QUOTES] [@ONLY]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [NEWLINE_STYLE [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">UNIX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|DOS|</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">WIN32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|LF|CRLF] ])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后续的参数分为三个部分：</p><ul><li>输出文件权限（主要用于Linux及其他类Unix系统） <ul><li><code>NO_SOURCE_PERMISSIONS</code>不使用源文件权限，使用默认644权限</li><li><code>USE_SOURCE_PERMISSIONS</code>保持与源文件权限一致</li><li><code>FILE_PERMISSIONS</code>自定义权限</li></ul></li><li>模板处理行为 <ul><li><code>COPYONLY</code>只复制，不进行变量替换</li><li><code>ESCAPE_QUOTES</code>是否对双引号进行转义。不能和<code>NEWLINE_STYLE</code>同时使用</li><li><code>@ONLY</code>只替换<code>@VAR@</code>形式的变量，<code>\${VAR}</code>形式的不进行替换</li></ul></li><li>换行方式 <ul><li><code>UNIX</code>和 <code>LF</code> 用 <code>\\n</code> 换行</li><li><code>DOS</code>、 <code>WIN32</code>、 <code>CRLF</code> 用 <code>\\r\\n</code> 换行</li></ul></li></ul><p> </p><h4 id="文件操作" tabindex="-1"><a class="header-anchor" href="#文件操作"><span>文件操作</span></a></h4><p>文件读取</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(READ &lt;filename&gt; &lt;variable&gt; [OFFSET &lt;offset&gt;] [LIMIT &lt;max-in&gt;] [HEX])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>filename</code>：要读取的文件名</li><li><code>variable</code>：保存读取内容的变量名</li><li><code>offset</code>：开始读的位置</li><li><code>max-in</code>：读取的字节数</li><li><code>HEX</code>：是否转为十六进制，在读取二进制文件时常用</li></ul><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(READ config.h.in result OFFSET 15 LIMIT 20 HEX)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${result}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><p>文件写入</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(WRITE &lt;filename&gt; &lt;content&gt;...) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 写入</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND &lt;filename&gt; &lt;content&gt;...) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 追加</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(APPEND config.h </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello Worl from cmake file&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;123456 555&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>更多文件操作见<a href="https://cmake.org/cmake/help/v3.26/command/file.html" target="_blank" rel="noopener noreferrer">官方文档</a></p><p> </p><h4 id="路径操作" tabindex="-1"><a class="header-anchor" href="#路径操作"><span>路径操作</span></a></h4><p>详细介绍及例子见<a href="https://cmake.org/cmake/help/v3.26/command/cmake_path.html" target="_blank" rel="noopener noreferrer">官方文档</a></p><p>一些示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./config.h&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(REAL_PATH  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">\${path}</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 将相对路径转为绝对路径</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cmake_path(GET </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> EXTENSION result) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 取出文件后缀部分</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${result}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cmake_path(GET </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> FILENAME result) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"># 取出文件名称部分</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(STATUS </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${result}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><h4 id="文件查找" tabindex="-1"><a class="header-anchor" href="#文件查找"><span>文件查找</span></a></h4><p><strong>在指定路径下查找指定文件</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">find_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (&lt;VAR&gt; name1 [path1 path2 ...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>VAR</code>：存放查找结果，找到则为文件绝对路径，找不到则为<code>&lt;VAR&gt;-NOTFOUND</code></li><li><code>name1</code>：需要查找的文件名</li><li><code>path</code>：指定查找路径，可以有多个</li></ul><p>更多操作见<a href="https://cmake.org/cmake/help/v3.26/command/find_file.html" target="_blank" rel="noopener noreferrer">官方文档</a></p><p> </p><p><strong>在指定路径下查找指定的库文件</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">find_library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (&lt;VAR&gt; name1 [path1 path2 ...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>参数与操作与文件查找相同。不同点在于库文件名可以简写，如<code>libMathFunctions.a</code>可以写为<code>MathFunctions</code>。</p><p>更多操作见<a href="https://cmake.org/cmake/help/v3.26/command/find_library.html" target="_blank" rel="noopener noreferrer">官方文档</a></p><p> </p><p><strong>在指定路径下查找指定的目录</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">find_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (&lt;VAR&gt; name1 [path1 path2 ...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>用法同上。更多操作见<a href="https://cmake.org/cmake/help/v3.26/command/find_path.html" target="_blank" rel="noopener noreferrer">官方文档</a></p><p> </p><h4 id="find-package" tabindex="-1"><a class="header-anchor" href="#find-package"><span>find_package</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">find_package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;PackageName&gt; [version] [EXACT] [QUIET] [MODULE]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">             [REQUIRED] [[COMPONENTS] [components...]] )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>PackageName</code>：需要查找的库名</p></li><li><p><code>version</code>：版本号</p></li><li><p><code>EXACT</code>：是否要精确匹配版本号</p></li><li><p><code>REQUIRED</code>：是否为必需的，加上之后如果找不到则会报错</p></li><li><p><code>COMPONENTS</code>：对于分了很多组件的包，可以指定组件</p></li></ul><p> </p><h3 id="项目指令" tabindex="-1"><a class="header-anchor" href="#项目指令"><span>项目指令</span></a></h3><h4 id="add-dependencies" tabindex="-1"><a class="header-anchor" href="#add-dependencies"><span>add_dependencies</span></a></h4><p>添加同级目标之间的相互依赖，保证依赖先生成。</p><p> </p><h4 id="add-custom-target" tabindex="-1"><a class="header-anchor" href="#add-custom-target"><span>add_custom_target</span></a></h4><p>添加自定义目标。</p><p> </p><h4 id="属性设置" tabindex="-1"><a class="header-anchor" href="#属性设置"><span>属性设置</span></a></h4><p>设置</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;GLOBAL                      |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              DIRECTORY [&lt;dir&gt;]           |</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">              TARGET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    [&lt;target1&gt; ...]   |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              SOURCE    [&lt;src1&gt; ...]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        [DIRECTORY &lt;dirs&gt; ...]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        [TARGET_DIRECTORY &lt;targets&gt; ...] |</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">              INSTALL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   [&lt;file1&gt; ...]     |</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">              TEST</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      [&lt;test1&gt; ...]     |</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">              CACHE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     [&lt;entry1&gt; ...]    &gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">             [APPEND] [APPEND_STRING] </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">             PROPERTY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [&lt;value1&gt; ...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>读取</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">get_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">             &lt;GLOBAL             |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              DIRECTORY [&lt;dir&gt;]  |</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">              TARGET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              SOURCE    &lt;source&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        [DIRECTORY &lt;dir&gt; | TARGET_DIRECTORY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;] |</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">              INSTALL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   &lt;file&gt;   |</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">              TEST</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;   |</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">              CACHE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     &lt;entry&gt;  |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              VARIABLE           &gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">             PROPERTY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">             [SET | </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">DEFINED</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | BRIEF_DOCS | FULL_DOCS])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>SET</code>：将<code>&lt;variable&gt;</code>设为该属性是否已设置</p></li><li><p><code>DEFINED</code>：将<code>&lt;variable&gt;</code>设为该属性是否已定义</p></li></ul><p><strong>全局属性</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(GLOBAL PROPERTY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [&lt;value1&gt; ...])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">get_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt; GLOBAL  PROPERTY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">get_cmake_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;var&gt; &lt;property&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>目录属性</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(DIRECTORY [&lt;dir&gt;] PROPERTY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [&lt;value1&gt; ...])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_directory_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(PROPERTIES prop1 value1 [prop2 value2] ...)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">get_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt; DIRECTORY [&lt;dir&gt;]  PROPERTY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">get_directory_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt; [DIRECTORY &lt;dir&gt;] &lt;prop-</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>目标属性</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">TARGET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;target1&gt; PROPERTY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [&lt;value1&gt; ...])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_target_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(target1... PROPERTIES prop1 value1 prop2 value2 ...)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">get_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">TARGET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  PROPERTY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">get_target_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;VAR&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> property)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>源文件属性</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(SOURCE [&lt;src1&gt; ...] [DIRECTORY &lt;dirs&gt; ...] [TARGET_DIRECTORY &lt;targets&gt; ...] PROPERTY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [&lt;value1&gt; ...])</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_source_files_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;files&gt; ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            [DIRECTORY &lt;dirs&gt; ...]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            [TARGET_DIRECTORY &lt;targets&gt; ...]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            PROPERTIES &lt;prop1&gt; &lt;value1&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                            [&lt;prop2&gt; &lt;value2&gt;] ...)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">get_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt; SOURCE &lt;source&gt;  PROPERTY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">get_source_file_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;variable&gt; &lt;file&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                         [DIRECTORY &lt;dir&gt; | TARGET_DIRECTORY &lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                         &lt;property&gt;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试属性</strong></p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set_tests_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(test1 [test2...] PROPERTIES prop1 value1 prop2 value2)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">get_test_property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> property VAR)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="添加预编译定义" tabindex="-1"><a class="header-anchor" href="#添加预编译定义"><span>添加预编译定义</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">add_compile_definitions(&lt;definition&gt; ...)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_definitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;INTERFACE|PUBLIC|PRIVATE&gt; [items1...]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  [&lt;INTERFACE|PUBLIC|PRIVATE&gt; [items2...] ...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可用生成器表达式。</p><p>示例：</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_definitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Tutorial PUBLIC HAVE_MAX_NUM MAX_NUM=100)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">add_compile_definitions(HAVE_MIN_NUM MIN_NUM=-999)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="添加编译选项" tabindex="-1"><a class="header-anchor" href="#添加编译选项"><span>添加编译选项</span></a></h4><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">add_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;option&gt; ...)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; [BEFORE]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;INTERFACE|PUBLIC|PRIVATE&gt; [items1...]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  [&lt;INTERFACE|PUBLIC|PRIVATE&gt; [items2...] ...])</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可用生成器表达式。</p><div class="language-cmake line-numbers-mode" data-highlighter="shiki" data-ext="cmake" data-title="cmake" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">MSVC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    add_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(/W4)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    add_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(-Wall -Wextra -Wpedantic)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">target_compile_options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tutorial_compiler_flags INTERFACE</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;$&lt;\${gcc_like_cxx}:$&lt;BUILD_INTERFACE:-Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused&gt;&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;$&lt;\${msvc_cxx}:$&lt;BUILD_INTERFACE:-W3&gt;&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="mark-as-advanced" tabindex="-1"><a class="header-anchor" href="#mark-as-advanced"><span>mark_as_advanced</span></a></h4><p>将缓存变量设为高级，在<code>cmake-gui</code>需要选择高级才能看到。</p><h4 id="target-sources" tabindex="-1"><a class="header-anchor" href="#target-sources"><span>target_sources</span></a></h4><p>为目标添加源文件</p><p> </p><h3 id="生成器表达式" tabindex="-1"><a class="header-anchor" href="#生成器表达式"><span>生成器表达式</span></a></h3><h1 id="下一步" tabindex="-1"><a class="header-anchor" href="#下一步"><span>下一步</span></a></h1><p>接下来该怎么学？</p><ul><li>重做CMake Tutorial，尽量自己完成，可以通过查文档复习、加深印象</li><li>读开源项目CMake文件的写法：https://github.com/fffaraz/awesome-cpp</li><li>继续熟悉文档，对有兴趣的地方自行深入研究</li><li>在应用中学习，通过使用CMake，遇到问题之后针对性地学习</li></ul><p> </p><p> </p>`,712),h=[t];function k(d,p){return a(),s("div",null,h)}const A=i(e,[["render",k],["__file","CMake笔记.html.vue"]]),g=JSON.parse('{"path":"/others/CMake%E7%AC%94%E8%AE%B0.html","title":"CMake笔记","lang":"en-US","frontmatter":{"title":"CMake笔记","icon":"CMake","category":["CMake"],"description":"[TOC] 预备知识 CMake是什么 CMake是一个管理代码构建的工具。与平台和构建系统无关。最初CMake只用于生成不同版本的Makefile。现在CMake可以生成不同构建工具构建文件，也可以生成不同IDE（如Visual Studio、XCode）的项目文件。 CMake也可以在一定程度上简化C/C++第三方库的引入与使用流程。 CMake主...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/others/CMake%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"Utopia"}],["meta",{"property":"og:title","content":"CMake笔记"}],["meta",{"property":"og:description","content":"[TOC] 预备知识 CMake是什么 CMake是一个管理代码构建的工具。与平台和构建系统无关。最初CMake只用于生成不同版本的Makefile。现在CMake可以生成不同构建工具构建文件，也可以生成不同IDE（如Visual Studio、XCode）的项目文件。 CMake也可以在一定程度上简化C/C++第三方库的引入与使用流程。 CMake主..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-06T05:44:48.000Z"}],["meta",{"property":"article:author","content":"GXL"}],["meta",{"property":"article:modified_time","content":"2024-10-06T05:44:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CMake笔记\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-06T05:44:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GXL\\",\\"url\\":\\"https://www.cnblogs.com/feel-myself\\",\\"email\\":\\"gaoxiaoliang123@126.com\\"}]}"]]},"headers":[{"level":2,"title":"CMake是什么","slug":"cmake是什么","link":"#cmake是什么","children":[]},{"level":2,"title":"环境搭建与学习准备","slug":"环境搭建与学习准备","link":"#环境搭建与学习准备","children":[]},{"level":2,"title":"前置条件","slug":"前置条件","link":"#前置条件","children":[{"level":3,"title":"Ubuntu安装CMake","slug":"ubuntu安装cmake","link":"#ubuntu安装cmake","children":[]},{"level":3,"title":"Windows安装CMake","slug":"windows安装cmake","link":"#windows安装cmake","children":[]},{"level":3,"title":"学习材料","slug":"学习材料","link":"#学习材料","children":[]}]},{"level":2,"title":"第一步 起点","slug":"第一步-起点","link":"#第一步-起点","children":[{"level":3,"title":"练习1  最简单的CMake项目","slug":"练习1-最简单的cmake项目","link":"#练习1-最简单的cmake项目","children":[]},{"level":3,"title":"练习2 指定C++标准","slug":"练习2-指定c-标准","link":"#练习2-指定c-标准","children":[]},{"level":3,"title":"练习3 添加版本号和配置头文件","slug":"练习3-添加版本号和配置头文件","link":"#练习3-添加版本号和配置头文件","children":[]}]},{"level":2,"title":"第二步 加个库","slug":"第二步-加个库","link":"#第二步-加个库","children":[{"level":3,"title":"练习1 创建库文件","slug":"练习1-创建库文件","link":"#练习1-创建库文件","children":[]},{"level":3,"title":"练习2 库文件可选编译","slug":"练习2-库文件可选编译","link":"#练习2-库文件可选编译","children":[]}]},{"level":2,"title":"第三步 添加使用依赖","slug":"第三步-添加使用依赖","link":"#第三步-添加使用依赖","children":[{"level":3,"title":"练习1 为库添加使用依赖","slug":"练习1-为库添加使用依赖","link":"#练习1-为库添加使用依赖","children":[]}]},{"level":2,"title":"第四步 生成器表达式","slug":"第四步-生成器表达式","link":"#第四步-生成器表达式","children":[{"level":3,"title":"练习1 用接口库设置C++标准","slug":"练习1-用接口库设置c-标准","link":"#练习1-用接口库设置c-标准","children":[]},{"level":3,"title":"练习2 添加编译警告选项","slug":"练习2-添加编译警告选项","link":"#练习2-添加编译警告选项","children":[]}]},{"level":2,"title":"第五步 安装与测试","slug":"第五步-安装与测试","link":"#第五步-安装与测试","children":[{"level":3,"title":"练习1 安装规则","slug":"练习1-安装规则","link":"#练习1-安装规则","children":[]},{"level":3,"title":"练习2 测试支持","slug":"练习2-测试支持","link":"#练习2-测试支持","children":[]}]},{"level":2,"title":"第六步 添加测试面板支持","slug":"第六步-添加测试面板支持","link":"#第六步-添加测试面板支持","children":[{"level":3,"title":"练习1 发送测试结果到测试面板","slug":"练习1-发送测试结果到测试面板","link":"#练习1-发送测试结果到测试面板","children":[]}]},{"level":2,"title":"第七步 添加系统特性检查","slug":"第七步-添加系统特性检查","link":"#第七步-添加系统特性检查","children":[{"level":3,"title":"练习1 评估依赖可用性","slug":"练习1-评估依赖可用性","link":"#练习1-评估依赖可用性","children":[]}]},{"level":2,"title":"第八步 添加自定义命令及用自定义命令生成文件","slug":"第八步-添加自定义命令及用自定义命令生成文件","link":"#第八步-添加自定义命令及用自定义命令生成文件","children":[]},{"level":2,"title":"第九步 打包安装程序","slug":"第九步-打包安装程序","link":"#第九步-打包安装程序","children":[]},{"level":2,"title":"第十步 选择静态链接库或动态链接库","slug":"第十步-选择静态链接库或动态链接库","link":"#第十步-选择静态链接库或动态链接库","children":[]},{"level":2,"title":"第十一步 添加导出配置","slug":"第十一步-添加导出配置","link":"#第十一步-添加导出配置","children":[]},{"level":2,"title":"第十二步 打包调试版和发行版","slug":"第十二步-打包调试版和发行版","link":"#第十二步-打包调试版和发行版","children":[]},{"level":2,"title":"练习 cmake-gui的使用","slug":"练习-cmake-gui的使用","link":"#练习-cmake-gui的使用","children":[]},{"level":2,"title":"CMake命令使用","slug":"cmake命令使用","link":"#cmake命令使用","children":[{"level":3,"title":"创建项目构建系统","slug":"创建项目构建系统","link":"#创建项目构建系统","children":[]},{"level":3,"title":"构建项目","slug":"构建项目","link":"#构建项目","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"运行脚本","slug":"运行脚本","link":"#运行脚本","children":[]},{"level":3,"title":"运行命令行工具","slug":"运行命令行工具","link":"#运行命令行工具","children":[]}]},{"level":2,"title":"CMake指令","slug":"cmake指令","link":"#cmake指令","children":[{"level":3,"title":"脚本指令","slug":"脚本指令","link":"#脚本指令","children":[]},{"level":3,"title":"项目指令","slug":"项目指令","link":"#项目指令","children":[]},{"level":3,"title":"生成器表达式","slug":"生成器表达式","link":"#生成器表达式","children":[]}]}],"git":{"createdTime":1728193488000,"updatedTime":1728193488000,"contributors":[{"name":"udo-bit","email":"enote_gxl@163.com","commits":1}]},"readingTime":{"minutes":46.54,"words":13963},"filePathRelative":"others/CMake笔记.md","localizedDate":"October 6, 2024","excerpt":"<p>[TOC]</p>\\n<h1>预备知识</h1>\\n<h2>CMake是什么</h2>\\n<p>CMake是一个管理代码构建的工具。与平台和构建系统无关。最初CMake只用于生成不同版本的Makefile。现在CMake可以生成不同构建工具构建文件，也可以生成不同IDE（如Visual\\nStudio、XCode）的项目文件。</p>\\n<p>CMake也可以在一定程度上简化C/C++第三方库的引入与使用流程。</p>\\n<p>CMake主要用于构建C或C++程序，但是也可以用于其他语言程序的构建。</p>\\n<p>****&nbsp;</p>\\n<h2>环境搭建与学习准备</h2>\\n<h2>前置条件</h2>","autoDesc":true}');export{A as comp,g as data};
