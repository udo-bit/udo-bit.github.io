import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,d as n}from"./app-DAU_DXh2.js";const i={},l=n(`<h2 id="案例需求" tabindex="-1"><a class="header-anchor" href="#案例需求"><span>案例需求</span></a></h2><p>打印内存使用率脚本，打印内存使用率、swap使用率、buff&amp;cache使用量</p><p><strong>实现效果</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#实现演示</span></span>
<span class="line"><span>内存使用率: 2.69%,buff&amp;cache:535 MB</span></span>
<span class="line"><span>Swap使用率: 0%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="脚本应用场景" tabindex="-1"><a class="header-anchor" href="#脚本应用场景"><span>脚本应用场景：</span></a></h2><p>监控平台+内存监控脚本</p><p>手动监控</p><h2 id="解决问题" tabindex="-1"><a class="header-anchor" href="#解决问题"><span>解决问题</span></a></h2><p>随时掌握业务对内存的占用，合理使用内存资源</p><h2 id="脚本思路" tabindex="-1"><a class="header-anchor" href="#脚本思路"><span>脚本思路</span></a></h2><p>1、获取物理内存、swap的相关数据</p><p>1.1通过数据检索获得物理内存总量、Swap的总量</p><p>1.2通过数据检索获得物理内存的使用量，Swap的使用量</p><p>1.3通过检索获得物理内存buff&amp;cache的量</p><p>2、调用相关数据进行运算，并输出结果</p><h2 id="实现代码" tabindex="-1"><a class="header-anchor" href="#实现代码"><span>实现代码</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#!/bin/bash</span></span>
<span class="line"><span># </span></span>
<span class="line"><span>#Author: www.zutuanxue.com</span></span>
<span class="line"><span>#Created Time: </span></span>
<span class="line"><span>#Release: </span></span>
<span class="line"><span>#Description:内存使用率计算脚本</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#1、通过free命令结合数据处理获得对应数据</span></span>
<span class="line"><span>#1.1、获得内存总量</span></span>
<span class="line"><span>memory_totle=\`free -m|grep -i &quot;mem&quot;|tr -s &quot; &quot;|cut -d &quot; &quot; -f2\`</span></span>
<span class="line"><span>swap_totle=\`free -m|grep -i &quot;swap&quot;|tr -s &quot; &quot;|cut -d &quot; &quot; -f2\`</span></span>
<span class="line"><span>#1.2、获得内存使用的量</span></span>
<span class="line"><span>memory_use=\`free -m|grep -i &quot;mem&quot;|tr -s &quot; &quot;|cut -d &quot; &quot; -f3\`</span></span>
<span class="line"><span>swap_use=\`free -m|grep -i &quot;swap&quot;|tr -s &quot; &quot;|cut -d &quot; &quot; -f3\`</span></span>
<span class="line"><span>#1.3、buff/cache</span></span>
<span class="line"><span>buff_cache=\`free -m|grep -i &quot;mem&quot;|tr -s &quot; &quot;|cut -d &quot; &quot; -f6\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#2、计算输出</span></span>
<span class="line"><span>#运算的时候是否需要小数点 浮点运算，要考虑使用的命令 （难点 重点）</span></span>
<span class="line"><span>#echo &quot;内存使用率: $((memory_use*100/memory_totle))%&quot;</span></span>
<span class="line"><span>#难点：浮点运算中，同优先级的情况下，大数除以小数 尽可能保证精确</span></span>
<span class="line"><span>echo &quot;内存使用率: \`echo &quot;scale=2;$memory_use*100/$memory_totle&quot;|bc\`%,buff&amp;cache:$buff_cache MB&quot;</span></span>
<span class="line"><span>echo &quot;Swap使用率: \`echo &quot;scale=2;$swap_use*100/$swap_totle&quot;|bc\`%&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="案例思考" tabindex="-1"><a class="header-anchor" href="#案例思考"><span>案例思考</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>内存获取的方式</span></span>
<span class="line"><span>内存占用的优先级</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,19),t=[l];function p(c,r){return a(),s("div",null,t)}const h=e(i,[["render",p],["__file","shell脚本案例-监控内存使用率.html.vue"]]),u=JSON.parse('{"path":"/demo/back-ends/Linux/Shell%E8%84%9A%E6%9C%AC/shell%E8%84%9A%E6%9C%AC%E6%A1%88%E4%BE%8B-%E7%9B%91%E6%8E%A7%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E7%8E%87.html","title":"shell脚本案例-监控内存使用率","lang":"en-US","frontmatter":{"title":"shell脚本案例-监控内存使用率","icon":"code","category":"shell","order":26,"description":"案例需求 打印内存使用率脚本，打印内存使用率、swap使用率、buff&cache使用量 实现效果 脚本应用场景： 监控平台+内存监控脚本 手动监控 解决问题 随时掌握业务对内存的占用，合理使用内存资源 脚本思路 1、获取物理内存、swap的相关数据 1.1通过数据检索获得物理内存总量、Swap的总量 1.2通过数据检索获得物理内存的使用量，Swap的...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/demo/back-ends/Linux/Shell%E8%84%9A%E6%9C%AC/shell%E8%84%9A%E6%9C%AC%E6%A1%88%E4%BE%8B-%E7%9B%91%E6%8E%A7%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E7%8E%87.html"}],["meta",{"property":"og:site_name","content":"Utopia"}],["meta",{"property":"og:title","content":"shell脚本案例-监控内存使用率"}],["meta",{"property":"og:description","content":"案例需求 打印内存使用率脚本，打印内存使用率、swap使用率、buff&cache使用量 实现效果 脚本应用场景： 监控平台+内存监控脚本 手动监控 解决问题 随时掌握业务对内存的占用，合理使用内存资源 脚本思路 1、获取物理内存、swap的相关数据 1.1通过数据检索获得物理内存总量、Swap的总量 1.2通过数据检索获得物理内存的使用量，Swap的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-21T02:46:20.000Z"}],["meta",{"property":"article:author","content":"GXL"}],["meta",{"property":"article:modified_time","content":"2024-09-21T02:46:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"shell脚本案例-监控内存使用率\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-21T02:46:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GXL\\",\\"url\\":\\"https://www.cnblogs.com/feel-myself\\",\\"email\\":\\"gaoxiaoliang123@126.com\\"}]}"]]},"headers":[{"level":2,"title":"案例需求","slug":"案例需求","link":"#案例需求","children":[]},{"level":2,"title":"脚本应用场景：","slug":"脚本应用场景","link":"#脚本应用场景","children":[]},{"level":2,"title":"解决问题","slug":"解决问题","link":"#解决问题","children":[]},{"level":2,"title":"脚本思路","slug":"脚本思路","link":"#脚本思路","children":[]},{"level":2,"title":"实现代码","slug":"实现代码","link":"#实现代码","children":[]},{"level":2,"title":"案例思考","slug":"案例思考","link":"#案例思考","children":[]}],"git":{"createdTime":1726886780000,"updatedTime":1726886780000,"contributors":[{"name":"udo-bit","email":"enote_gxl@163.com","commits":1}]},"readingTime":{"minutes":1.44,"words":432},"filePathRelative":"demo/back-ends/Linux/Shell脚本/shell脚本案例-监控内存使用率.md","localizedDate":"September 21, 2024","excerpt":"<h2>案例需求</h2>\\n<p>打印内存使用率脚本，打印内存使用率、swap使用率、buff&amp;cache使用量</p>\\n<p><strong>实现效果</strong></p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>#实现演示</span></span>\\n<span class=\\"line\\"><span>内存使用率: 2.69%,buff&amp;cache:535 MB</span></span>\\n<span class=\\"line\\"><span>Swap使用率: 0%</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{h as comp,u as data};
